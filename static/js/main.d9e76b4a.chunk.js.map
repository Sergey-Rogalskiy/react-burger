{"version":3,"sources":["components/order-feed/order-feed.module.css","components/burger-constructor/burger-constructor.module.css","types.tsx","components/app-header/app-header.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","images/order-done.svg","components/order-details/order-details.tsx","components/ingridient-details/ingridient-details.tsx","components/order-details-modal/order-details-modal.tsx","services/utils.js","services/real-service.js","services/actions/constructor.tsx","services/actions/ingridients.tsx","components/pages/error404.tsx","services/actions/registration.tsx","components/utils/loader/index.tsx","components/utils/loader/spinner.tsx","components/pages/login.jsx","components/pages/register.tsx","components/pages/forgot-password.tsx","components/pages/reset-password.tsx","components/order-feed/element/element.tsx","components/order-feed/order-feed.tsx","components/order-feed/cooking-done-board.tsx","services/actions/feed.tsx","components/pages/feed.tsx","components/pages/feed-id.tsx","components/profile/profile.tsx","components/protected-route/protected-route.tsx","components/pages/profile.tsx","components/pages/ingredients-id.tsx","components/burger-constructor/fixed-bun.tsx","components/burger-constructor/ingridient.tsx","components/burger-constructor/ingridients.tsx","components/burger-constructor/total-price.tsx","components/burger-constructor/burger-constructor.tsx","components/burger-ingridients/ingridient-card/ingridient-card.tsx","components/burger-ingridients/list-by-type/element.tsx","components/burger-ingridients/list-by-type/list-by-type.tsx","components/burger-ingridients/burger-ingridients.tsx","components/pages/main.tsx","components/protected-route/auth-protected-route.tsx","components/app/app.tsx","reportWebVitals.ts","images/error-404.jpg","components/utils/error-indicator/error-indicator.tsx","components/utils/error-boundry/index.tsx","components/utils/error-boundry/error-boundry.tsx","services/reducers/ingridients.tsx","services/reducers/constructor.tsx","services/reducers/registration.tsx","services/reducers/feed.tsx","services/reducers/index.jsx","store.tsx","services/socket-midleware.js","services/socket-midleware-auth.js","index.tsx","components/app-header/app-header.module.css","components/order-details-modal/order-details-modal.module.css","components/pages/pages.module.css","components/ingridient-details/ingridient-details.module.css","components/burger-ingridients/burger-ingridients.module.css","components/burger-ingridients/list-by-type/list-by-type.module.css","components/order-details/order-details.module.css","components/modal/modal.module.css","components/burger-ingridients/ingridient-card/ingridient-card.module.css","components/modal-overlay/modal-overlay.module.css","components/utils/error-indicator/error-indicator.module.css"],"names":["module","exports","useSelector","selectorHook","useDispatch","dispatchHook","AppHeader","pathname","useLocation","user","state","registration","className","s","header","header__inner","nav","nav__link","activeClassName","active","to","exact","type","header__logo","name","ModalOverlay","props","modalStyles","modal_overlay","onClick","onClose","modalRoot","document","getElementById","Modal","children","ReactDOM","createPortal","modal","id","OrderDetails","order","burgerConstructor","styles","main","wrapped","number","image","src","orderDoneImg","alt","IngridientDetails","currentItemToView","item","grid","calories","proteins","fat","carbohydrates","OrderDetailsModal","ingridients","data","ingredients","items","allIngridientsData","map","filter","ingredient","_id","price","slice","totalPrice","reduce","acc","center","status","done_clr","index","flex_row","flex_center","img","time","getCookie","matches","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","value","exp","path","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","_apiBase","getIngridientsRequest","token","a","getResource","res","getOrderRequest","postResource","getForgotPasswordService","getResetPasswordService","postResourceRaw","getRegisterService","getLoginService","getLogoutService","getTokenService","getUserService","patchUserService","patchResource","getOrderByIdRequest","getResourceRaw","url","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","ok","Error","json","Authorization","addData","body","JSON","stringify","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_FAILED","ADD_ITEM_TO_CONSTRUCTOR","DELETE_ITEM_FROM_CONSTRUCTOR","CHANGE_ORDER_OF_ITEMS_IN_CONSTRUCTOR","getOrderFailedAction","getOrder","dispatch","accessToken","console","log","then","success","getOrderSuccessAction","catch","err","GET_ITEMS_REQUEST","GET_ITEMS_SUCCESS","GET_ITEMS_FAILED","TAB_SWITCH","SET_CURRENT_ITEM_TO_VIEW","tabSwitchAction","payload","setCurrentItemToView","getItems","Error404","container","GET_FORGOT_PASSWORD_REQUEST","GET_FORGOT_PASSWORD_SUCCESS","GET_FORGOT_PASSWORD_FAILED","GET_REGISTER_REQUEST","GET_REGISTER_SUCCESS","GET_REGISTER_FAILED","GET_RESET_PASSWORD_REQUEST","GET_RESET_PASSWORD_SUCCESS","GET_RESET_PASSWORD_FAILED","GET_LOGIN_REQUEST","GET_LOGIN_SUCCESS","GET_LOGIN_FAILED","GET_LOGOUT_REQUEST","GET_LOGOUT_SUCCESS","GET_LOGOUT_FAILED","GET_TOKEN_REQUEST","GET_TOKEN_SUCCESS","GET_TOKEN_FAILED","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILED","PATCH_USER_REQUEST","PATCH_USER_SUCCESS","PATCH_USER_FAILED","getLogout","getUser","Spinner","LoginPage","loginFailed","loginRequest","React","useState","email","password","setValue","onChange","e","target","enterClick","preventDefault","split","text_color_error","message","onSubmit","placeholder","error","errorText","size","link","RegisterPage","registerRequest","registerFailed","inputRef","useRef","onRegisterClick","ref","ForgotPaswordPage","forgotPasswordData","forgotPasswordRequest","forgotPasswordFailed","onRestoreClick","localStorage","setItem","toString","getItem","ResetPage","isForgotEmail","resetPasswordData","resetPasswordRequest","resetPasswordFailed","onSaveClick","history","useHistory","useEffect","from","Element","testData","ingredientsImages","length","card","createdAt","images","round","OrderFeed","useRouteMatch","location","wsFeedData","orders","overflow","openModal","push","background","clickOrder","CookingDoneBoard","allOrders","feed","doneOrders","doneOrders2","cookingOrders","cookingOrders2","totalOrders","total","todayOrders","totalToday","done","list_inner","shinny_clr","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_GET_MESSAGE","WS_SEND_MESSAGE","WS_CONNECTION_CLOSED","WS_CONNECTION_AUTH_START","WS_CONNECTION_AUTH_SUCCESS","WS_CONNECTION_AUTH_ERROR","WS_GET_MESSAGE_AUTH","WS_SEND_MESSAGE_AUTH","WS_CONNECTION_AUTH_CLOSED","ORDER_ID_REQUEST","ORDER_ID_SUCCESS","ORDER_ID_FAILED","getOrderByIdtOrderFailedAction","getOrderById","getOrderByIdSuccessAction","FeedPage","column","row","left","right","FeedIdPage","param","useParams","orderId","ProdileEdit","save","alert","patchUser","icon","ProtectedRoute","rest","init","render","ProfilePage","refreshToken","wsFeedDataAuth","flex_column","sidebar__link","IngridientsIdPage","find","el","FixedBun","buns","burgerConstructorStyles","flex","text","thumbnail","isLocked","template","Ingridient","useDrop","accept","drop","current","dragIndex","hoverIndex","moveCard","dropRef","useDrag","collect","monitor","isDragging","drag","opacity","style","cursor","handleClose","Ingridients","test","TotalPrice","chosenBuns","confirm_block","BurgerConstructor","chosenItems","IngridientCard","counter","position","count","ingridientCardStyles","ListByType","isDrag","dragRef","listByTypeStyles","list_by_type","BurgerIngridients","currentTab","data_buns","obj1","data_sauces","data_mains","myRefScrollBuns","myRefScrollSauces","myRefScrollMains","myRefScrollContainer","display","scrollIntoView","burgerIngridientsStyles","onScroll","bunsDis","saucesDis","getBoundingClientRect","top","MainPage","DndProvider","backend","HTML5Backend","AuthProtectedRoute","userRequest","App","visible","setVisible","event","dataIds","splice","closeModal","addEventListener","handleKeyUp","removeEventListener","keyCode","action","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ErrorIndicator","error_indicator","ErrorBoundry","hasError","this","setState","Component","initialState","itemsRequest","itemsFailed","orderRequest","orderFailed","totalPriceBuns","registerData","logoutRequest","logoutFailed","tokenRequest","tokenFailed","userFailed","wsConnected","wsError","wsAuthConnected","wsAuthError","orderIdRequest","orderIdFailed","rootReducer","combineReducers","priceItems","b","priceBuns","newItems","priceForNewItems","dragCard","newArray","removeItem","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","socket","next","WebSocket","onopen","onerror","onmessage","parsedData","parse","restParsedData","wsGetMessageAction","onclose","send","thunk","createStore","StrictMode"],"mappings":"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","file":"static/js/main.d9e76b4a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overflow\":\"order-feed_overflow__3c-hW\",\"card\":\"order-feed_card__2mkcD\",\"flex_row\":\"order-feed_flex_row__1gpPt\",\"img\":\"order-feed_img__13Cyg\",\"done\":\"order-feed_done__1xqH4\",\"images\":\"order-feed_images__1WZr4\",\"round\":\"order-feed_round__1xOL-\",\"flex_center\":\"order-feed_flex_center__BSHlr\",\"done_clr\":\"order-feed_done_clr__3M270\",\"shinny_clr\":\"order-feed_shinny_clr__1bUSa\",\"list_inner\":\"order-feed_list_inner__1-kYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"burger-constructor_flex__1sKPk\",\"center\":\"burger-constructor_center__3PTIj\",\"test\":\"burger-constructor_test__2sBX3\",\"confirm_block\":\"burger-constructor_confirm_block__u6TDE\",\"overflow\":\"burger-constructor_overflow__31Lzu\",\"fixed_items\":\"burger-constructor_fixed_items__BRB9Z\",\"total\":\"burger-constructor_total__AcK3H\",\"template\":\"burger-constructor_template__TVVUi\"};","import { TFeedActions} from './services/actions/feed';\r\nimport { TConstructorActions } from './services/actions/constructor';\r\nimport { TRegistrationActions } from './services/actions/registration';\r\nimport { TIngredientActions } from './services/actions/ingridients';\r\nimport { store } from './store';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { Action, ActionCreator } from 'redux';\r\nimport {\r\n  TypedUseSelectorHook,\r\n  useSelector as selectorHook,\r\n  useDispatch as dispatchHook,\r\n} from 'react-redux';\r\n\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook; \r\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>(); \r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport type TOrderByID = {\r\n  success: boolean,\r\n  orders:TOrder[],\r\n}\r\n\r\nexport type TWsGetMessage = {\r\n  orders: TOrder[],\r\n  total:number,\r\n  totalToday:number\r\n}\r\nexport type TLoginResponse = {\r\n  accessToken: string,\r\n  refreshToken: string,\r\n  success: boolean,\r\n  user: TUser\r\n}\r\nexport type TPatchUserResponse = {\r\n  success: boolean,\r\n  user: TUser\r\n}\r\n\r\nexport type TForgotPasswordData = {\r\n  success: boolean,\r\n  message: string\r\n}\r\nexport type TUser = {\r\n  name: string, \r\n  email: string,\r\n  password?: string\r\n}\r\n\r\nexport type TUserLogin = {\r\n  email: string,\r\n  password: string\r\n}\r\nexport type TOrderlementModal = {\r\n  item:TOrder,\r\n  type:string,\r\n}\r\nexport type TElementModal = {\r\n  item:TIngredient,\r\n  type:string,\r\n}\r\nexport type TDropIngredient = {\r\n  item:TIngredient,\r\n  index:number,\r\n}\r\n\r\ntype TOwner = {\r\n  name:string,\r\n  email:string,\r\n  createdAt:string,\r\n  updatedAt:string,\r\n}\r\n\r\ntype TOrderRequest = {\r\n  _id:string,\r\n  owner:TOwner,\r\n  status:string,\r\n  name:string,\r\n  createdAt:string,\r\n  updatedAt:string,\r\n  number:number,\r\n  price:number\r\n}\r\n\r\nexport type TOrderResponse = {\r\n  success:true,\r\n  name: string,\r\n  order: TOrderRequest\r\n}\r\nexport type TCurrentItemToView = {\r\n  type: 'order' | 'ingridient',\r\n  item: TIngredient | TOrder | null | undefined\r\n}\r\n\r\nexport type TChosenBuns = {\r\n  price: number; \r\n  name:string;\r\n  image:string\r\n  _id:string\r\n}\r\n\r\nexport type TAppActions = \r\nTFeedActions |\r\nTConstructorActions |\r\nTRegistrationActions|\r\nTIngredientActions;\r\n\r\nexport type AppThunk<TReturn = void> = ActionCreator<\r\n  ThunkAction<TReturn, Action, RootState, TAppActions>\r\n>; \r\nexport type AppDispatch = typeof store.dispatch; \r\n  \r\n export type TIngredient = {\r\n    calories: number\r\n    carbohydrates?: number\r\n    fat:number\r\n    image:string\r\n    image_large:string\r\n    image_mobile:string\r\n    name:string\r\n    price:number\r\n    proteins:number\r\n    type:string\r\n    __v:number\r\n    _id: string\r\n    key?: number\r\n    ingredients: Array<string>\r\n  }\r\n\r\nexport type TOrder = {\r\n    status: string\r\n    _id: string\r\n    number: number | string\r\n    id:number\r\n    ingredients: Array<string>\r\n    name: string\r\n    createdAt: string\r\n    price:number\r\n    image:string\r\n    calories: number\r\n    proteins:number\r\n    fat:number\r\n    carbohydrates?: number\r\n  }\r\n\r\nexport  type TLocationItem = {\r\n    hash: string\r\n    key: string\r\n    pathname: string\r\n    search: string\r\n    state: null\r\n  }\r\nexport  type TLocation = {\r\n    hash: string\r\n    key: string\r\n    pathname: string\r\n    from: TLocationItem\r\n    search: string\r\n    state: { background: TLocationItem } | null\r\n    background: TLocationItem\r\n  }\r\n","import { FC } from 'react'\r\nimport {Logo, BurgerIcon, ListIcon, ProfileIcon} from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { NavLink, useLocation, } from \"react-router-dom\"\r\nimport s from './app-header.module.css'\r\nimport { useSelector } from '../../types'\r\n\r\nconst AppHeader: FC = () => {\r\n  const {pathname} = useLocation()\r\n  const user = useSelector(state => state.registration.user)\r\n  return (\r\n    <header className={s.header}>\r\n      <div className={s.header__inner}>\r\n        <nav className={s.nav}>\r\n            <NavLink className={s.nav__link} activeClassName={s.active} to=\"/\" exact>\r\n              <BurgerIcon type={(pathname === \"/\") ? \"primary\" : \"secondary\"} />\r\n              <span className='p-2'>Конструктор</span>\r\n            </NavLink>\r\n            <NavLink className={s.nav__link} activeClassName={s.active} to=\"/feed\">\r\n              <ListIcon type={(pathname === \"/feed\") ? \"primary\" : \"secondary\"}  />\r\n              <span className='p-2'>Лента заказов</span>\r\n            </NavLink>\r\n        </nav>\r\n\r\n        <div className={s.header__logo}>\r\n          <Logo />\r\n        </div>\r\n\r\n          <nav className={s.nav}>\r\n              <NavLink className={s.nav__link} activeClassName={s.active} to=\"/profile\">\r\n                  <ProfileIcon type={(pathname === \"/profile\") ?  \"primary\" : \"secondary\"}  />\r\n                  <span className='p-2'>\r\n                    {\r\n                      user ? user.name : 'Личный кабинет'\r\n                    }\r\n                  </span>\r\n              </NavLink>\r\n          </nav>\r\n    </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default AppHeader;\r\n","import { FC } from 'react';\r\n\r\nimport modalStyles from './modal-overlay.module.css'\r\n\r\ntype TProps = {\r\n  onClose:()=>void\r\n}\r\nconst ModalOverlay: FC<TProps> = (props) => {\r\n  return (\r\n    <div \r\n      className={modalStyles.modal_overlay} \r\n      onClick={props.onClose}>\r\n    </div>\r\n  );\r\n} \r\n\r\nexport default ModalOverlay;\r\n","import { FC } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  CloseIcon\r\n} from '@ya.praktikum/react-developer-burger-ui-components'\r\n\r\nimport ModalOverlay from '../modal-overlay/modal-overlay'\r\n\r\nimport modalStyles from './modal.module.css'\r\n\r\nconst modalRoot = document.getElementById(\"react-modals\");\r\n\r\ntype TProps = {\r\n  header: string;\r\n  children: JSX.Element;\r\n  onClose: () =>void;\r\n}\r\n\r\nconst Modal:FC<TProps> = (props) => {\r\n  \r\n  const { children, header, onClose } = props;\r\n  return ReactDOM.createPortal(\r\n    (\r\n      <>\r\n        <ModalOverlay onClose={onClose}/>\r\n        <div className={modalStyles.modal} id=\"modal\">\r\n          <h1 className={modalStyles.header}>\r\n            {header}\r\n            <CloseIcon type=\"primary\" onClick={onClose}/>\r\n          </h1>\r\n              {children}\r\n        </div>\r\n      </>\r\n    ), \r\n    modalRoot as any\r\n  );\r\n} \r\n\r\n\r\nexport default Modal;\r\n","export default __webpack_public_path__ + \"static/media/order-done.db76bd81.svg\";","import orderDoneImg from '../../images/order-done.svg';\r\nimport { useSelector } from '../../types'\r\n\r\nimport styles from './order-details.module.css'\r\n\r\n\r\nconst OrderDetails = () => {\r\n  const order = useSelector(state => state.burgerConstructor.order)\r\n  return (\r\n    <>\r\n    {\r\n      order\r\n      ?\r\n      <div className={styles.main}>\r\n        <p className={`${styles.wrapped} text text_type_digits-large`}>\r\n          {order.order.number}\r\n        </p>\r\n        <p className=\"text text_type_main-medium\">идентификатор заказа</p>\r\n        <img className={styles.image} src={orderDoneImg} alt=\"Done!\"/>\r\n        <p className=\"text text_type_main-default\">Ваш заказ начали готовить</p>\r\n        <p className=\"text text_type_main-default\">Дождитесь готовности на орбитальной станции</p>\r\n      </div>\r\n      :\r\n      <div>Подождите, ожидаем номер заказа...</div>\r\n    }\r\n\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default OrderDetails;\r\n\r\n","import { FC } from 'react'\r\nimport styles from './ingridient-details.module.css'\r\nimport {TCurrentItemToView} from '../../types'\r\n\r\ntype TProps = {\r\n  currentItemToView: TCurrentItemToView\r\n}\r\n\r\nconst IngridientDetails: FC<TProps> = (props) => {\r\n  const currentItemToView = props.currentItemToView\r\n\r\n  return (\r\n    <>\r\n      {\r\n        currentItemToView?.item\r\n        ?\r\n        <>\r\n        <div className={styles.modal}>\r\n          <img src={currentItemToView.item.image} className={styles.image} alt=\"Ingridient\"/>\r\n          <p className={`${styles.name} text text_type_main-medium`}>{currentItemToView.item.name}</p>\r\n          <p className={`${styles.name} text text_type_main-default`}>Данные отсутствуют в API </p>\r\n          <div className={`${styles.grid}  text_color_inactive pt-5`}>\r\n            <p className=\"text text_type_main-default\">Калорий,ккал</p>\r\n            <p className=\"text text_type_main-default\">Булки,г</p>\r\n            <p className=\"text text_type_main-default\">Жиры,г</p>\r\n            <p className=\"text text_type_main-default\">Углеводы,г</p>\r\n            <p className=\"text text_type_digits-default p-3\">{currentItemToView.item.calories}</p>\r\n            <p className=\"text text_type_digits-default p-3\">{currentItemToView.item.proteins}</p>\r\n            <p className=\"text text_type_digits-default p-3\">{currentItemToView.item.fat}</p>\r\n            <p className=\"text text_type_digits-default p-3\">{currentItemToView.item.carbohydrates}</p>\r\n          </div>\r\n        </div>\r\n        </>\r\n        :\r\n        <div>Дай подумать о мармышках</div>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default IngridientDetails;\r\n\r\n","import {\r\n  CurrencyIcon\r\n} from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { useSelector } from '../../types'\r\nimport { TIngredient } from '../../types'\r\n\r\nimport s from './order-details-modal.module.css'\r\n\r\n\r\n\r\n\r\nconst OrderDetailsModal = () => {\r\n  const currentItemToView = useSelector(state => state.ingridients.currentItemToView)\r\n  \r\n  const data = currentItemToView && currentItemToView.item\r\n  const ingredients = useSelector(state => state.ingridients.items)\r\n  \r\n  const allIngridientsData =  data && data.ingredients.map((item:string) => {\r\n    return {\r\n      image: ingredients.filter((ingredient:TIngredient) => ingredient._id === item)[0].image,\r\n      price: ingredients.filter((ingredient:TIngredient) => ingredient._id === item)[0].price,\r\n      name: ingredients.filter((ingredient:TIngredient) => ingredient._id === item)[0].name\r\n    }\r\n  }).slice(0, 5)\r\n  const totalPrice = allIngridientsData && allIngridientsData.reduce((acc: number, item: any) => acc+item.price, 0)\r\n\r\n  return (\r\n    <>\r\n      {\r\n        currentItemToView\r\n        ?\r\n        <>\r\n        <div className={s.modal}>\r\n          \r\n        <p className={`${s.center} text text_type_digits-default mb-2`}>#{\r\n          \r\n          // @ts-ignore: Unreachable code error\r\n          data && data.number}\r\n        </p>\r\n        <p className=\"text text_type_main-medium\">{\r\n          // @ts-ignore: Unreachable code error\r\n          data.name}\r\n        </p>\r\n        {\r\n        // @ts-ignore: Unreachable code error\r\n          (data.status === 'done') \r\n          ? <p className={`${s.done_clr} mb-10`}>Выполнен</p>\r\n          : <p className={`mb-10`}>Готовится</p>\r\n        }\r\n        \r\n        <p className=\"text text_type_main-medium mb-6\">Состав:</p>\r\n        <ul>\r\n            \r\n            {\r\n              allIngridientsData && allIngridientsData.map((item:any, index:number) => (\r\n                <li  key={index} className={s.flex_row}>\r\n                  <div className={s.flex_center}>\r\n                    <img className={s.img} src={item.image} alt=\"-\" />\r\n                    <span className='p-3'>{item.name}</span>\r\n                  </div>\r\n                  <div className={`${s.flex_center} mb-3`}>\r\n                      <span className='p-2'>{item.type ==='bun'? '2' : '1'} x {item.price}</span>\r\n                      <CurrencyIcon type=\"primary\" />\r\n                  </div>\r\n                </li>\r\n              ))\r\n            }\r\n        </ul>\r\n        \r\n        <div className={s.flex_row}>\r\n            <p className=\"text text_type_main-default text_color_inactive pt-3\">{\r\n              // @ts-ignore: Unreachable code error\r\n              data.time}\r\n              </p>\r\n            \r\n            <div className={s.flex_center}>\r\n              <span className=\"text text_type_main-medium p-2\">\r\n                {totalPrice}\r\n              </span> \r\n              <CurrencyIcon type=\"primary\" />\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n        </>\r\n        :\r\n        <div>Дай подумать о мармышках</div>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderDetailsModal;\r\n\r\n","export function getCookie(name) {\r\n  const matches = document.cookie.match(\r\n    new RegExp('(?:^|; )' + name.replace(/([.$?*|{}()[]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n  );\r\n  return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\nexport function setCookie(name, value, props={}) {\r\n  props = {\r\n    path: '/', \r\n    ...props\r\n  };\r\n  let exp = props.expires;\r\n  if (typeof exp == 'number' && exp) {\r\n    const d = new Date();\r\n    d.setTime(d.getTime() + exp * 1000);\r\n    exp = props.expires = d;\r\n  }\r\n  if (exp && exp.toUTCString) {\r\n    props.expires = exp.toUTCString();\r\n  }\r\n  value = encodeURIComponent(value);\r\n  let updatedCookie = name + '=' + value;\r\n  for (const propName in props) {\r\n    updatedCookie += '; ' + propName;\r\n    const propValue = props[propName];\r\n    if (propValue !== true) {\r\n      updatedCookie += '=' + propValue;\r\n    }\r\n  }\r\n  document.cookie = updatedCookie;\r\n}\r\n\r\nexport function deleteCookie(name) {\r\n  setCookie(name, null, { expires: -1 });\r\n}\r\n","\r\n\r\nimport { getCookie } from './utils';\r\n\r\nconst _apiBase = 'https://norma.nomoreparties.space/api'\r\n// _imageBase = 'https://norma.nomoreparties.space/static/pics/';\r\n\r\n\r\nexport const getUserRequest = async () =>\r\n  await fetch('https://norma.nomoreparties.space/user', {\r\n    method: 'GET',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: 'Bearer ' + getCookie('token')\r\n    },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer'\r\n  });\r\nexport const getIngridientsRequest = async (token) => {\r\n  const res = await getResource(`/ingredients`, token);\r\n  return res;\r\n};\r\nexport const getOrderRequest = async (token='alla', data) => {\r\n  const res = await postResource(`/orders`, token, data);\r\n  return res;\r\n};\r\nexport const getForgotPasswordService = async (token='alla', data) => {\r\n  const res = await postResource(`/password-reset`, token, data);\r\n  return res;\r\n};\r\nexport const getResetPasswordService = async (data) => {\r\n  const res = await postResourceRaw(`/password-reset/reset`, data);\r\n  return res;\r\n};\r\nexport const getRegisterService = async (data) => {\r\n  const res = await postResourceRaw(`/auth/register`, data);\r\n  return res;\r\n};\r\nexport const getLoginService = async (data) => {\r\n  const res = await postResourceRaw(`/auth/login`, data);\r\n  return res;\r\n};\r\nexport const getLogoutService = async (token, data=null) => {\r\n  const res = await postResource(`/auth/logout`, token, data);\r\n  return res;\r\n};\r\nexport const getTokenService = async (token) => {\r\n  const res = await postResource(`/auth/token`, token);\r\n  return res;\r\n};\r\nexport const getUserService = async (token) => {\r\n  const res = await getResource(`/auth/user`, token);\r\n  return res;\r\n};\r\nexport const patchUserService = async (token, data) => {\r\n  const res = await patchResource(`/auth/user`, token, data);\r\n  return res;\r\n};\r\nexport const getFeedRequest = async () => {\r\n  const res = await getResource(`/feed`);\r\n  return res;\r\n};\r\nexport const getOrderByIdRequest = async (_id) => {\r\n  const res = await getResourceRaw(`/orders/${_id}`);\r\n  return res;\r\n};\r\n\r\n\r\nconst getResourceRaw = async (url, token) => {\r\n  const res = await fetch(`${_apiBase}${url}`, {\r\n    method: 'GET', // *GET, POST, PUT, DELETE, etc.,\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    // body: JSON.stringify({ token: token })\r\n  });\r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch '${url}', received '${res.status}'`)\r\n  }\r\n  return await res.json();\r\n};\r\n\r\nconst getResource = async (url, token) => {\r\n  const res = await fetch(`${_apiBase}${url}`, {\r\n    method: 'GET', // *GET, POST, PUT, DELETE, etc.,\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    // body: JSON.stringify({ token: token })\r\n  });\r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch '${url}', received '${res.status}'`)\r\n  }\r\n  return await res.json();\r\n};\r\n\r\nconst postResourceRaw = async (url, data={}) => {\r\n  const addData =  {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify(data)\r\n  }\r\n  const res = await fetch(\r\n    `${_apiBase}${url}`, \r\n    addData\r\n  )\r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch ${url}` +\r\n      `, received ${res.status}`)\r\n  }\r\n  return await res.json();\r\n};\r\nconst postResource = async (url, token, data=null) => {\r\n  let addData\r\n  if (data) {\r\n    addData = {\r\n      method:'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body:JSON.stringify({...data, token:token})\r\n    }\r\n  } else {\r\n    addData = {\r\n      method:'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body:JSON.stringify({token:token})\r\n    }\r\n\r\n  }\r\n  const res = await fetch(\r\n    `${_apiBase}${url}`, \r\n    addData\r\n  )\r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch ${url}` +\r\n      `, received ${res.status}`)\r\n  }\r\n  return await res.json();\r\n};\r\nconst patchResource = async (url, token, data={}) => {\r\n  const addData = {\r\n    method:'PATCH',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify(data)\r\n  }\r\n  const res = await fetch(\r\n    `${_apiBase}${url}`, \r\n    addData\r\n  )\r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch ${url}` +\r\n      `, received ${res.status}`)\r\n  }\r\n  return await res.json();\r\n};","import { \r\n    getOrderRequest, \r\n  } from '../real-service';\r\nimport { getCookie } from '../utils';\r\nimport { TOrder, TIngredient, AppThunk, AppDispatch, TOrderResponse } from '../../types';\r\n\r\nexport const GET_ORDER_REQUEST:'GET_ORDER_REQUEST' = 'GET_ORDER_REQUEST';\r\nexport const GET_ORDER_SUCCESS:'GET_ORDER_SUCCESS' = 'GET_ORDER_SUCCESS';\r\nexport const GET_ORDER_FAILED:'GET_ORDER_FAILED' = 'GET_ORDER_FAILED';\r\n\r\nexport const ADD_ITEM_TO_CONSTRUCTOR:'ADD_ITEM_TO_CONSTRUCTOR' = 'ADD_ITEM_TO_CONSTRUCTOR';\r\nexport const DELETE_ITEM_FROM_CONSTRUCTOR:'DELETE_ITEM_FROM_CONSTRUCTOR' = 'DELETE_ITEM_FROM_CONSTRUCTOR';\r\nexport const CHANGE_ORDER_OF_ITEMS_IN_CONSTRUCTOR:'CHANGE_ORDER_OF_ITEMS_IN_CONSTRUCTOR' = 'CHANGE_ORDER_OF_ITEMS_IN_CONSTRUCTOR';\r\n\r\nexport const ORDER_RESET:'ORDER_RESET' = 'ORDER_RESET';\r\n\r\nexport interface IGetOrderAction {\r\n  readonly type: typeof GET_ORDER_REQUEST;\r\n}\r\n\r\nexport interface IGetOrderFailedAction {\r\n  readonly type: typeof GET_ORDER_FAILED;\r\n}\r\n\r\nexport interface IGetOrderSuccessAction {\r\n  readonly type: typeof GET_ORDER_SUCCESS;\r\n  readonly order: TOrderResponse|null;\r\n}\r\n\r\nexport interface IOrderResetAction {\r\n  readonly type: typeof ORDER_RESET;\r\n}\r\n\r\nexport interface IAddItemToConstructorAction {\r\n  readonly type: typeof ADD_ITEM_TO_CONSTRUCTOR;\r\n  item: TIngredient\r\n}\r\n\r\nexport interface IDeleteItemFromConstructorAction {\r\n  readonly type: typeof DELETE_ITEM_FROM_CONSTRUCTOR;\r\n  index: number\r\n}\r\n\r\nexport interface IChangeOrderItemsInConstructorAction {\r\n  readonly type: typeof CHANGE_ORDER_OF_ITEMS_IN_CONSTRUCTOR;\r\n  dragIndex:number;\r\n  hoverIndex:number;\r\n}\r\n\r\nexport type TConstructorActions = \r\nIGetOrderAction |\r\nIGetOrderFailedAction |\r\nIGetOrderSuccessAction|\r\nIOrderResetAction|\r\nIAddItemToConstructorAction|\r\nIDeleteItemFromConstructorAction|\r\nIChangeOrderItemsInConstructorAction;\r\n\r\n\r\nexport const getOrderAction = (): IGetOrderAction => ({\r\n  type: GET_ORDER_REQUEST\r\n});\r\n\r\nexport const getOrderFailedAction = (): IGetOrderFailedAction => ({\r\n  type: GET_ORDER_FAILED\r\n});\r\n\r\nexport const getOrderSuccessAction = (res:TOrderResponse): IGetOrderSuccessAction => ({\r\n  type: GET_ORDER_SUCCESS,\r\n  order: res\r\n});\r\n\r\nexport const orderResetAction = (): IOrderResetAction => ({\r\n  type: ORDER_RESET,\r\n});\r\nexport const addItemToConstructorAction = (item:TIngredient): IAddItemToConstructorAction => ({\r\n  type: ADD_ITEM_TO_CONSTRUCTOR,\r\n  item: item\r\n});\r\nexport const deleteItemFromConstructorAction = (index:number): IDeleteItemFromConstructorAction => ({\r\n  type: DELETE_ITEM_FROM_CONSTRUCTOR,\r\n  index: index\r\n});\r\nexport const changeOrderItemsInConstructorAction = (dragIndex:number,hoverIndex:number): IChangeOrderItemsInConstructorAction => ({\r\n  type: CHANGE_ORDER_OF_ITEMS_IN_CONSTRUCTOR,\r\n  dragIndex:dragIndex,\r\n  hoverIndex:hoverIndex,\r\n});\r\n\r\nexport const getOrder: AppThunk = (data: {ingredients: string[]}) => (dispatch: AppDispatch) => {\r\n  const accessToken = getCookie('accessToken')\r\n  console.log(data);\r\n  \r\n      dispatch(getOrderAction());\r\n      getOrderRequest(accessToken, data)\r\n      .then(res => {\r\n        if (res && res.success) {\r\n          dispatch(getOrderSuccessAction(res));\r\n        } else {\r\n          dispatch(getOrderFailedAction());\r\n        }\r\n      })\r\n      .catch(err => {\r\n          dispatch(getOrderFailedAction());\r\n      })\r\n  }","import { \r\n    getIngridientsRequest, \r\n} from '../real-service';\r\nimport { TIngredient, AppThunk, AppDispatch, TCurrentItemToView } from '../../types';\r\nexport const GET_ITEMS_REQUEST:'GET_ITEMS_REQUEST' = 'GET_ITEMS_REQUEST';\r\nexport const GET_ITEMS_SUCCESS:'GET_ITEMS_SUCCESS' = 'GET_ITEMS_SUCCESS';\r\nexport const GET_ITEMS_FAILED:'GET_ITEMS_FAILED' = 'GET_ITEMS_FAILED';\r\nexport const TAB_SWITCH:'TAB_SWITCH' = 'TAB_SWITCH';\r\nexport const SET_CURRENT_ITEM_TO_VIEW:'SET_CURRENT_ITEM_TO_VIEW' = 'SET_CURRENT_ITEM_TO_VIEW';\r\n\r\n\r\nexport interface IGetItemsAction {\r\n  readonly type: typeof GET_ITEMS_REQUEST;\r\n}\r\n\r\nexport interface IGetItemsFailedAction {\r\n  readonly type: typeof GET_ITEMS_FAILED ;\r\n}\r\n\r\nexport interface IGetItemsSuccessAction {\r\n  readonly type: typeof GET_ITEMS_SUCCESS;\r\n  readonly items: Array<TIngredient>;\r\n}\r\n\r\nexport interface ITabSwitchAction {\r\n  readonly type: typeof TAB_SWITCH;\r\n  payload: 'buns' | 'sauces' | 'mains'\r\n}\r\n\r\nexport interface ISetCurrentItemsToViewAction {\r\n  readonly type: typeof SET_CURRENT_ITEM_TO_VIEW;\r\n  currentItemToView: any\r\n}\r\n\r\nexport type TIngredientActions = \r\nIGetItemsAction |\r\nIGetItemsFailedAction |\r\nIGetItemsSuccessAction|\r\nITabSwitchAction |\r\nISetCurrentItemsToViewAction;\r\n\r\nexport const getItemsAction = (): IGetItemsAction => ({\r\n  type: GET_ITEMS_REQUEST\r\n});\r\n\r\nexport const getItemsFailedAction = (): IGetItemsFailedAction => ({\r\n  type: GET_ITEMS_FAILED\r\n});\r\n\r\nexport const getItemsSuccessAction = (res:Array<TIngredient>): IGetItemsSuccessAction => ({\r\n  type: GET_ITEMS_SUCCESS,\r\n  items: res\r\n});\r\n\r\nexport const tabSwitchAction = (res:'buns' | 'sauces' | 'mains'): ITabSwitchAction => ({\r\n  type: TAB_SWITCH,\r\n  payload: res\r\n});\r\n\r\nexport const setCurrentItemsToViewAction = (res:any): ISetCurrentItemsToViewAction => ({\r\n  type: SET_CURRENT_ITEM_TO_VIEW,\r\n  currentItemToView: res\r\n});\r\n\r\nexport function setCurrentItemToView(currentItemToView: any) {\r\n  return function(dispatch: AppDispatch) {\r\n    dispatch(setCurrentItemsToViewAction(currentItemToView))\r\n  }\r\n}\r\n\r\nexport const getItems: AppThunk = () => (dispatch: AppDispatch) => {\r\n  dispatch({\r\n    type: GET_ITEMS_REQUEST\r\n  });\r\n  getIngridientsRequest()\r\n  .then(res => {\r\n    if (res && res.success) {\r\n      dispatch({\r\n        type: GET_ITEMS_SUCCESS,\r\n        items: res.data\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: GET_ITEMS_FAILED\r\n      });\r\n    }\r\n  })\r\n  .catch(err => {\r\n      dispatch({\r\n        type: GET_ITEMS_FAILED\r\n      });\r\n  })\r\n}\r\n","import s from './pages.module.css'\r\n\r\nfunction Error404() {\r\n\r\n  return (\r\n    <div className={s.container}>\r\n        404\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Error404;\r\n","import { \r\n    getRegisterService, \r\n    getForgotPasswordService,\r\n    getResetPasswordService,\r\n    getLoginService,\r\n    getLogoutService,\r\n    getTokenService,\r\n    getUserService,\r\n    patchUserService\r\n  } from '../real-service';\r\n  import { getCookie, setCookie, deleteCookie} from '../utils';\r\n  import { \r\n    AppThunk, \r\n    AppDispatch, \r\n    TUser, \r\n    TUserLogin,\r\n    TPatchUserResponse,\r\n    TLoginResponse\r\n  } from '../../types';\r\n\r\n  export const GET_FORGOT_PASSWORD_REQUEST:'GET_FORGOT_PASSWORD_REQUEST' = 'GET_FORGOT_PASSWORD_REQUEST';\r\n  export const GET_FORGOT_PASSWORD_SUCCESS:'GET_FORGOT_PASSWORD_SUCCESS' = 'GET_FORGOT_PASSWORD_SUCCESS';\r\n  export const GET_FORGOT_PASSWORD_FAILED:'GET_FORGOT_PASSWORD_FAILED' = 'GET_FORGOT_PASSWORD_FAILED';\r\n  export const GET_REGISTER_REQUEST:'GET_REGISTER_REQUEST' = 'GET_REGISTER_REQUEST';\r\n  export const GET_REGISTER_SUCCESS:'GET_REGISTER_SUCCESS' = 'GET_REGISTER_SUCCESS';\r\n  export const GET_REGISTER_FAILED:'GET_REGISTER_FAILED' = 'GET_REGISTER_FAILED';\r\n  export const GET_RESET_PASSWORD_REQUEST:'GET_RESET_PASSWORD_REQUEST' = 'GET_RESET_PASSWORD_REQUEST';\r\n  export const GET_RESET_PASSWORD_SUCCESS:'GET_RESET_PASSWORD_SUCCESS' = 'GET_RESET_PASSWORD_SUCCESS';\r\n  export const GET_RESET_PASSWORD_FAILED:'GET_RESET_PASSWORD_FAILED' = 'GET_RESET_PASSWORD_FAILED';\r\n  export const GET_LOGIN_REQUEST:'GET_LOGIN_REQUEST' = 'GET_LOGIN_REQUEST';\r\n  export const GET_LOGIN_SUCCESS:'GET_LOGIN_SUCCESS' = 'GET_LOGIN_SUCCESS';\r\n  export const GET_LOGIN_FAILED:'GET_LOGIN_FAILED' = 'GET_LOGIN_FAILED';\r\n  export const GET_LOGOUT_REQUEST:'GET_LOGOUT_REQUEST' = 'GET_LOGOUT_REQUEST';\r\n  export const GET_LOGOUT_SUCCESS:'GET_LOGOUT_SUCCESS' = 'GET_LOGOUT_SUCCESS';\r\n  export const GET_LOGOUT_FAILED:'GET_LOGOUT_FAILED' = 'GET_LOGOUT_FAILED';\r\n  export const GET_TOKEN_REQUEST:'GET_TOKEN_REQUEST' = 'GET_TOKEN_REQUEST';\r\n  export const GET_TOKEN_SUCCESS:'GET_TOKEN_SUCCESS' = 'GET_TOKEN_SUCCESS';\r\n  export const GET_TOKEN_FAILED:'GET_TOKEN_FAILED' = 'GET_TOKEN_FAILED';\r\n  export const GET_USER_REQUEST:'GET_USER_REQUEST' = 'GET_USER_REQUEST';\r\n  export const GET_USER_SUCCESS:'GET_USER_SUCCESS' = 'GET_USER_SUCCESS';\r\n  export const GET_USER_FAILED:'GET_USER_FAILED' = 'GET_USER_FAILED';\r\n  export const PATCH_USER_REQUEST:'PATCH_USER_REQUEST' = 'PATCH_USER_REQUEST';\r\n  export const PATCH_USER_SUCCESS:'PATCH_USER_SUCCESS' = 'PATCH_USER_SUCCESS';\r\n  export const PATCH_USER_FAILED:'PATCH_USER_FAILED' = 'PATCH_USER_FAILED';\r\n\r\n  export interface IGetForgotPasswordRequestAction {\r\n    readonly type: typeof GET_FORGOT_PASSWORD_REQUEST;\r\n  }\r\n    export const getForgotPasswordRequestAction = (): IGetForgotPasswordRequestAction => ({\r\n      type: GET_FORGOT_PASSWORD_REQUEST,\r\n  });\r\n    export interface IGetForgotPasswordSuccessAction {\r\n    readonly type: typeof GET_FORGOT_PASSWORD_SUCCESS;\r\n    payload: any;\r\n  }\r\n    export const getForgotPasswordSuccessAction = (payload: any): IGetForgotPasswordSuccessAction => ({\r\n      type: GET_FORGOT_PASSWORD_SUCCESS,\r\n      payload: payload,\r\n  });\r\n    export interface IGetForgotPasswordFailedAction {\r\n    readonly type: typeof GET_FORGOT_PASSWORD_FAILED;\r\n  }\r\n    export const getForgotPasswordFailedAction = (): IGetForgotPasswordFailedAction => ({\r\n      type: GET_FORGOT_PASSWORD_FAILED,\r\n  });\r\n    export interface IGetRegisterRequestAction {\r\n    readonly type: typeof GET_REGISTER_REQUEST;\r\n  }\r\n    export const getRegisterequestAction = (): IGetRegisterRequestAction => ({\r\n      type: GET_REGISTER_REQUEST,\r\n  });\r\n    export interface IGetRegisterSuccessAction {\r\n    readonly type: typeof GET_REGISTER_SUCCESS;\r\n    readonly payload: TLoginResponse;\r\n\r\n  }\r\n    export const getRegisterSuccessAction = (payload: TLoginResponse): IGetRegisterSuccessAction => ({\r\n      type: GET_REGISTER_SUCCESS,\r\n      payload: payload\r\n  });\r\n    export interface IGetRegisterFailedAction {\r\n    readonly type: typeof GET_REGISTER_FAILED;\r\n  }\r\n    export const getRegisterFailedAction = (): IGetRegisterFailedAction => ({\r\n      type: GET_REGISTER_FAILED,\r\n  });\r\n    export interface IGetResetPasswordRequestAction {\r\n    readonly type: typeof GET_RESET_PASSWORD_REQUEST;\r\n  }\r\n    export const getResetPasswordRequestAction = (): IGetResetPasswordRequestAction => ({\r\n      type: GET_RESET_PASSWORD_REQUEST,\r\n  });\r\n    export interface IGetResetPasswordSuccessAction {\r\n    readonly type: typeof GET_RESET_PASSWORD_SUCCESS;\r\n    payload: any;\r\n  }\r\n    export const getResetPasswordSuccessAction = (payload:any): IGetResetPasswordSuccessAction => ({\r\n      type: GET_RESET_PASSWORD_SUCCESS,\r\n      payload: payload\r\n  });\r\n    export interface IGetResetPasswordFailedAction {\r\n    readonly type: typeof GET_RESET_PASSWORD_FAILED;\r\n  }\r\n    export const getResetPasswordFailedAction = (): IGetResetPasswordFailedAction => ({\r\n      type: GET_RESET_PASSWORD_FAILED,\r\n  });\r\n    export interface IGetLoginRequestAction {\r\n    readonly type: typeof GET_LOGIN_REQUEST;\r\n  }\r\n    export const getLoginRequestAction = (): IGetLoginRequestAction => ({\r\n      type: GET_LOGIN_REQUEST,\r\n  });\r\n    export interface IGetLoginSuccessAction {\r\n    readonly type: typeof GET_LOGIN_SUCCESS;\r\n    readonly payload: TLoginResponse;\r\n  }\r\n    export const getLoginSuccessAction = (payload: TLoginResponse): IGetLoginSuccessAction => ({\r\n      type: GET_LOGIN_SUCCESS,\r\n      payload: payload,\r\n  });\r\n    export interface IGetLoginFailedAction {\r\n    readonly type: typeof GET_LOGIN_FAILED;\r\n  }\r\n    export const getLoginFailedAction = (): IGetLoginFailedAction => ({\r\n      type: GET_LOGIN_FAILED,\r\n  });\r\n    export interface IGetLogoutRequestAction {\r\n    readonly type: typeof GET_LOGOUT_REQUEST;\r\n  }\r\n    export const getLogoutRequestAction = (): IGetLogoutRequestAction => ({\r\n      type: GET_LOGOUT_REQUEST,\r\n  });\r\n    export interface IGetLogoutSuccessAction {\r\n    readonly type: typeof GET_LOGOUT_SUCCESS;\r\n  }\r\n    export const getLogoutSuccessAction = (): IGetLogoutSuccessAction => ({\r\n      type: GET_LOGOUT_SUCCESS,\r\n  });\r\n    export interface IGetLogoutFailedAction {\r\n    readonly type: typeof GET_LOGOUT_FAILED;\r\n  }\r\n    export const getLogoutFailedAction = (): IGetLogoutFailedAction => ({\r\n      type: GET_LOGOUT_FAILED,\r\n  });\r\n    export interface IGetTokenRequestAction {\r\n    readonly type: typeof GET_TOKEN_REQUEST;\r\n  }\r\n    export const getTokenRequestAction = (): IGetTokenRequestAction => ({\r\n      type: GET_TOKEN_REQUEST,\r\n  });\r\n    export interface IGetTokenSuccessAction {\r\n    readonly type: typeof GET_TOKEN_SUCCESS;\r\n  }\r\n    export const getTokenSuccessAction = (): IGetTokenSuccessAction => ({\r\n      type: GET_TOKEN_SUCCESS,\r\n  });\r\n    export interface IGetTokenFailedAction {\r\n    readonly type: typeof GET_TOKEN_FAILED;\r\n  }\r\n    export const getTokenFailedAction = (): IGetTokenFailedAction => ({\r\n      type: GET_TOKEN_FAILED,\r\n  });\r\n    export interface IGetUserRequestAction {\r\n    readonly type: typeof GET_USER_REQUEST;\r\n  }\r\n    export const getUserRequestAction = (): IGetUserRequestAction => ({\r\n      type: GET_USER_REQUEST,\r\n  });\r\n    export interface IGetUserSuccessAction {\r\n    readonly type: typeof GET_USER_SUCCESS;\r\n    payload: TPatchUserResponse;\r\n  }\r\n    export const getUserSuccessAction = (payload: TPatchUserResponse): IGetUserSuccessAction => ({\r\n      type: GET_USER_SUCCESS,\r\n      payload,\r\n  });\r\n    export interface IGetUserFailedAction {\r\n    readonly type: typeof GET_USER_FAILED;\r\n  }\r\n    export const getUserFailedAction = (): IGetUserFailedAction => ({\r\n      type: GET_USER_FAILED,\r\n  });\r\n\r\n  export type TRegistrationActions = \r\n  IGetForgotPasswordRequestAction |\r\n  IGetForgotPasswordSuccessAction |\r\n  IGetForgotPasswordFailedAction |\r\n  IGetRegisterRequestAction |\r\n  IGetRegisterSuccessAction |\r\n  IGetRegisterFailedAction |\r\n  IGetResetPasswordRequestAction |\r\n  IGetResetPasswordSuccessAction |\r\n  IGetResetPasswordFailedAction |\r\n  IGetLoginRequestAction |\r\n  IGetLoginSuccessAction |\r\n  IGetLoginFailedAction |\r\n  IGetLogoutRequestAction |\r\n  IGetLogoutSuccessAction |\r\n  IGetLogoutFailedAction |\r\n  IGetTokenRequestAction |\r\n  IGetTokenSuccessAction |\r\n  IGetTokenFailedAction |\r\n  IGetUserRequestAction |\r\n  IGetUserSuccessAction |\r\n  IGetUserFailedAction |\r\n  IPatchUserAction |\r\n  IPatchUserFailedAction | \r\n  IPatchUserSuccessAction;\r\n  \r\n  export interface IPatchUserAction {\r\n    readonly type: typeof PATCH_USER_REQUEST;\r\n  }\r\n\r\n  export const patchUserAction = (): IPatchUserAction => ({\r\n    type: PATCH_USER_REQUEST\r\n  });\r\n  \r\n  \r\n  export interface IPatchUserFailedAction {\r\n    readonly type: typeof PATCH_USER_FAILED ;\r\n  }\r\n  export const patchUserFailedAction = ():IPatchUserFailedAction => ({\r\n    type: PATCH_USER_FAILED\r\n  });\r\n  \r\n  export interface IPatchUserSuccessAction {\r\n    readonly type: typeof PATCH_USER_SUCCESS;\r\n    readonly payload: TPatchUserResponse;\r\n  }\r\n  \r\n  export const patchUserSuccessAction = (res:TPatchUserResponse): IPatchUserSuccessAction => ({\r\n    type: PATCH_USER_SUCCESS,\r\n    payload: res\r\n  });\r\n  \r\nexport const getRegister: AppThunk = (data: TUser) => (dispatch: AppDispatch) => {\r\n  dispatch({\r\n    type: GET_REGISTER_REQUEST\r\n  });\r\n  getRegisterService(data)\r\n  .then(res => {\r\n    if (res && res.success) {\r\n      setCookie('accessToken', res.accessToken.split('Bearer ')[1])\r\n      dispatch({\r\n        type: GET_REGISTER_SUCCESS,\r\n        payload: res\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: GET_REGISTER_FAILED,\r\n        payload: res\r\n      });\r\n    }\r\n  })\r\n  .catch(err => {\r\n      dispatch({\r\n        type: GET_REGISTER_FAILED,\r\n        payload: err\r\n      });\r\n  })\r\n}\r\n\r\nexport const getLogin: AppThunk = (data: TUserLogin) => (dispatch: AppDispatch) => {\r\n    dispatch({\r\n      type: GET_LOGIN_REQUEST\r\n    });\r\n    getLoginService(data)\r\n    .then(res => {\r\n      if (res && res.success) {\r\n        setCookie('accessToken', res.accessToken.split('Bearer ')[1])\r\n        dispatch({\r\n          type: GET_LOGIN_SUCCESS,\r\n          payload: res\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: GET_LOGIN_FAILED,\r\n          payload: res\r\n        });\r\n      }\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n          type: GET_LOGIN_FAILED,\r\n          payload: err\r\n        });\r\n    })\r\n}\r\n\r\nexport const getLogout: AppThunk = (token: string) => (dispatch: AppDispatch) => {\r\n    dispatch({\r\n      type: GET_LOGOUT_REQUEST\r\n    });\r\n    getLogoutService(token)\r\n    .then(res => {\r\n      if (res && res.success) {\r\n        deleteCookie('accessToken')\r\n        dispatch({\r\n          type: GET_LOGOUT_SUCCESS,\r\n          payload: res\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: GET_LOGOUT_FAILED,\r\n          payload: res\r\n        });\r\n      }\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n          type: GET_LOGOUT_FAILED,\r\n          payload: err\r\n        });\r\n    })\r\n}\r\n\r\nexport const getToken: AppThunk = (token: string) => (dispatch: AppDispatch) => {\r\n    dispatch({\r\n      type: GET_TOKEN_REQUEST\r\n    });\r\n    getTokenService(token)\r\n    .then(res => {\r\n      if (res && res.success) {\r\n        setCookie('accessToken', res.accessToken.split('Bearer ')[1])\r\n        dispatch({\r\n          type: GET_TOKEN_SUCCESS,\r\n          payload: res\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: GET_TOKEN_FAILED,\r\n          payload: res\r\n        });\r\n      }\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n          type: GET_TOKEN_FAILED,\r\n          payload: err\r\n        });\r\n    })\r\n}\r\n\r\nexport const getUser: AppThunk = (token: string) => (dispatch: AppDispatch) => {\r\n    dispatch({\r\n      type: GET_USER_REQUEST\r\n    });\r\n    getUserService(token)\r\n    .then(res => {\r\n      if (res && res.success) {\r\n        dispatch({\r\n          type: GET_USER_SUCCESS,\r\n          payload: res\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: GET_USER_FAILED,\r\n          payload: res\r\n        });\r\n      }\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n          type: GET_USER_FAILED,\r\n          payload: err\r\n        });\r\n    })\r\n}\r\n\r\nexport const patchUser: AppThunk = (data: TUser) => (dispatch: AppDispatch) => {\r\n  const token = getCookie('accessToken')\r\n  dispatch({\r\n    type: PATCH_USER_REQUEST\r\n  });\r\n  patchUserService(token, data)\r\n  .then(res => {\r\n    if (res && res.success) {\r\n      dispatch({\r\n        type: PATCH_USER_SUCCESS,\r\n        payload: res\r\n      });\r\n      alert('User information was updated successfully')\r\n    } else {\r\n      dispatch({\r\n        type: PATCH_USER_FAILED,\r\n        payload: res\r\n      });\r\n    }\r\n  })\r\n  .catch(err => {\r\n      dispatch({\r\n        type: PATCH_USER_FAILED,\r\n        payload: err\r\n      });\r\n  })\r\n}\r\n\r\ninterface IStorage {\r\n  getItem(key: string): string | null;\r\n  setItem(key: string, value: string): void;\r\n  removeItem(key: string): void;\r\n}\r\n\r\nexport const getForgotPassword: AppThunk = (data: TUserLogin) => (dispatch: AppDispatch) => {\r\n\r\n  const token = 'lala'\r\n  localStorage.setItem('isForgotEmail', true.toString())\r\n  dispatch({\r\n    type: GET_FORGOT_PASSWORD_REQUEST\r\n  });\r\n  getForgotPasswordService(token, data)\r\n  .then(res => {\r\n    if (res && res.success) {\r\n      dispatch({\r\n        type: GET_FORGOT_PASSWORD_SUCCESS,\r\n        payload: res\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: GET_FORGOT_PASSWORD_FAILED,\r\n        payload: res\r\n      });\r\n    }\r\n  })\r\n  .catch(err => {\r\n      dispatch({\r\n        type: GET_FORGOT_PASSWORD_FAILED,\r\n        payload: err\r\n      });\r\n  })\r\n  }\r\n  \r\nexport const getResetPassword: AppThunk = (data: TUserLogin) => (dispatch: AppDispatch) => {\r\n    dispatch({\r\n      type: GET_RESET_PASSWORD_REQUEST\r\n    });\r\n    getResetPasswordService(data)\r\n    .then(res => {\r\n      if (res && res.success) {\r\n        dispatch({\r\n          type: GET_RESET_PASSWORD_SUCCESS,\r\n          payload: res\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: GET_RESET_PASSWORD_FAILED,\r\n          payload: res\r\n        });\r\n      }\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n          type: GET_RESET_PASSWORD_FAILED,\r\n          payload: err\r\n        });\r\n    })\r\n  }","import Spinner from './spinner';\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n\r\n\t<div className=\"loader-wrap\">\r\n\r\n\t   <div className=\"loader\">\r\n\t   </div>\r\n\t</div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react'\r\nimport {\r\n  Input,\r\n  PasswordInput,\r\n  Button\r\n} from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport {getLogin} from '../../services/actions/registration'\r\nimport { useSelector, useDispatch} from '../../types'\r\nimport Spinner from '../utils/loader'\r\n\r\nimport s from './pages.module.css'\r\n\r\nfunction LoginPage() {\r\n  const dispatch = useDispatch()\r\n  const loginFailed = useSelector(state => state.registration.loginFailed)\r\n  const loginRequest = useSelector(state => state.registration.loginRequest)\r\n  const user = useSelector(state => state.registration.user)\r\n  \r\n  const [value, setValue] = React.useState({email: '', password: '', })\r\n  const onChange = e => {\r\n    setValue({...value, [e.target.name]: e.target.value})\r\n  }\r\n  \r\n  const enterClick = (e) => {\r\n    e.preventDefault()\r\n    dispatch(getLogin(value))\r\n  }\r\n\r\n  if (user) {\r\n    return (\r\n      <div className = {`${s.container} `}>\r\n        <div className = {`${s.registration}`}>\r\n         <p className=\"text text_type_main-medium m-3 mt-15\">\r\n          <Redirect to='/'/>\r\n         </p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  \r\n  if (loginRequest) {\r\n    return (\r\n      <div className = {`${s.container} `}>\r\n          <Spinner/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  \r\n  \r\n  return (\r\n    <div className = {`${s.container} `}>\r\n      <div className = {`${s.registration}`}>\r\n\r\n       <p className=\"text text_type_main-medium m-3 mt-15\">\r\n        Вход\r\n       </p>\r\n        {\r\n          (loginFailed) ? (\r\n            <p className={`${s.text_color_error} text text_type_main-default m-3 colors-interface-error`}>\r\n              {(loginFailed.message)}\r\n            </p>\r\n          ) : (\r\n            <p className={`${s.text_color_error} text text_type_main-default m-3 colors-interface-error`}>\r\n              {(loginFailed.message)}\r\n            </p>\r\n          )\r\n        }\r\n\r\n  <form onSubmit={(e) => enterClick(e)}>\r\n        <Input\r\n          type={'text'}\r\n          placeholder={'E-mail'}\r\n          onChange={onChange}\r\n          value={value.email}\r\n          name={'email'}\r\n          error={false}\r\n          errorText={'Ошибка'}\r\n          size={'default'}\r\n        />\r\n\r\n        <PasswordInput \r\n          onChange={onChange} \r\n          value={value.password} \r\n          name={'password'} />\r\n        \r\n        <Button \r\n          type=\"primary\" \r\n          size=\"large\" >\r\n            Войти\r\n        </Button>\r\n        </form>\r\n        <p className=\"text text_type_main-default text_color_inactive m-3 mt-15\">\r\n          Вы — новый пользователь? \r\n          <Link to='/register' className={s.link}>\r\n            Зарегистрироваться\r\n          </Link>\r\n        </p>\r\n        \r\n        <p className=\"text text_type_main-default text_color_inactive m-3\">\r\n          Забыли пароль? \r\n          <Link to='/forgot-password' className={s.link}>\r\n            Восстановить пароль\r\n          </Link> \r\n        </p>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from 'react'\r\nimport {\r\n  Input,\r\n  PasswordInput,\r\n  Button\r\n} from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { useSelector, useDispatch} from '../../types'\r\nimport {getRegister} from '../../services/actions/registration'\r\nimport Spinner from '../utils/loader'\r\n\r\nimport s from './pages.module.css'\r\n\r\nfunction RegisterPage() {\r\n  const dispatch = useDispatch()\r\n  const registerRequest = useSelector(state => state.registration.registerRequest)\r\n  const registerFailed = useSelector(state => state.registration.registerFailed)\r\n  const user = useSelector(state => state.registration.user)\r\n\r\n  \r\n  const [value, setValue] = React.useState({name: '', email: '', password: '', })\r\n  const onChange =(e:React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue({...value, [e.target.name]: e.target.value})\r\n  }\r\n  \r\n  const inputRef = React.useRef(null)\r\n  const onRegisterClick = (e:any) => {\r\n    e.preventDefault()\r\n    dispatch(getRegister(value))\r\n  }\r\n\r\n  if (user) {\r\n    return (\r\n      <div className = {`${s.container} `}>\r\n        <div className = {`${s.registration}`}>\r\n         <p className=\"text text_type_main-medium m-3 mt-15\">\r\n          <Redirect to='/profile'/>\r\n         </p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  if (registerRequest) {\r\n    return (\r\n      <div className = {`${s.container} `}>\r\n        <div className = {`${s.registration}`}>\r\n         <p className=\"m-3 mt-15\">\r\n         <Spinner/>\r\n         </p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <div className={s.container}>\r\n      <div className = {`${s.registration}`}>\r\n\r\n      <p className=\"text text_type_main-medium m-3 mt-15\">\r\n        Регистрация\r\n        </p>\r\n        {\r\n          (registerFailed) ? (\r\n            <p className={`${s.text_color_error} text text_type_main-default m-3 colors-interface-error`}>\r\n            Error: {(registerFailed.message ? registerFailed.message: 'TBC')}\r\n            </p>\r\n          ) : (\r\n            <p className={`${s.text_color_error} text text_type_main-default m-3 colors-interface-error`}>\r\n               \r\n            </p>\r\n          )\r\n        }\r\n\r\n<form onSubmit={(e) => onRegisterClick(e)}>\r\n      <Input\r\n        type={'text'}\r\n        placeholder={'Имя'}\r\n        onChange={onChange}\r\n        value={value.name}\r\n        name={'name'}\r\n        error={false}\r\n        ref={inputRef}\r\n        errorText={'Ошибка'}\r\n        size={'default'}\r\n      />\r\n\r\n      <Input\r\n        type={'email'}\r\n        placeholder={'E-mail'}\r\n        onChange={onChange}\r\n        value={value.email}\r\n        name={'email'}\r\n        error={false}\r\n        errorText={'Ошибка'}\r\n        size={'default'}\r\n      />\r\n\r\n      <PasswordInput \r\n        onChange={onChange} \r\n        value={value.password} \r\n        name={'password'} />\r\n      <Button type=\"primary\" size=\"large\">\r\n        Зарегистрироваться\r\n      </Button>\r\n      </form>\r\n    <p className=\"text text_type_main-default text_color_inactive m-3 mt-15\">\r\n      Уже зарегистрированы? \r\n      <Link to='/login' className={s.link}>\r\n         Войти\r\n      </Link>\r\n    </p>\r\n    </div>\r\n    </div>\r\n    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","import React from 'react'\r\nimport {\r\n  Input,\r\n  Button\r\n} from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { Link, Redirect  } from \"react-router-dom\"\r\nimport { useSelector } from '../../types'\r\nimport { useDispatch } from '../../types'\r\nimport {getForgotPassword} from '../../services/actions/registration'\r\nimport Spinner from '../utils/loader'\r\n\r\nimport s from './pages.module.css'\r\n\r\nconst ForgotPaswordPage = () => {\r\n  const dispatch = useDispatch()\r\n  const forgotPasswordData = useSelector(state => state.registration.forgotPasswordData)\r\n  const forgotPasswordRequest = useSelector(state => state.registration.forgotPasswordRequest)\r\n  const forgotPasswordFailed = useSelector(state => state.registration.forgotPasswordFailed)\r\n  \r\n\r\n  const [value, setValue] = React.useState({email: '', password: '', })\r\n  const onChange = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue({...value, [e.target.name]: e.target.value})\r\n  }\r\n  \r\n  const inputRef = React.useRef(null)\r\n  const onRestoreClick = (e:any) => {\r\n    e.preventDefault()\r\n    dispatch(getForgotPassword(\r\n      {\r\n        \"email\": value.email\r\n      }\r\n    ))\r\n  }\r\n  \r\n  if (forgotPasswordRequest) {\r\n    return (\r\n    <div className={s.container}>\r\n    <div className = {`${s.registration}`}>\r\n    <Spinner/>\r\n    </div>\r\n  </div>\r\n    )\r\n  }\r\n\r\n  if (localStorage.getItem('isForgotEmail')) {\r\n    return (\r\n      \r\n    <div className={s.container}>\r\n      <div className = {`${s.registration}`}>\r\n      <Redirect to='/reset-password' />\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n\r\n  if (forgotPasswordFailed) {\r\n    return (\r\n      <div className={s.container}>\r\n        <div className = {`${s.registration}`}>\r\n          <p>alert error {forgotPasswordFailed}</p>\r\n        </div>\r\n      </div>\r\n      )\r\n    }\r\n  \r\n  return (\r\n    <>\r\n    <div className={s.container}>\r\n      <div className = {`${s.registration}`}>\r\n\r\n      <p className=\"text text_type_main-medium m-3 mt-15\">\r\n        Восстановление пароля\r\n      </p>\r\n        \r\n    <form onSubmit={(e) => onRestoreClick(e)}>\r\n      <Input\r\n        type={'email'}\r\n        placeholder={'Укажите e-mail'}\r\n        onChange={onChange}\r\n        value={value.email}\r\n        name={'email'}\r\n        error={false}\r\n        ref={inputRef}\r\n        errorText={'Ошибка'}\r\n        size={'default'}\r\n      />\r\n\r\n      {(forgotPasswordData?.message)\r\n          ? <p>\r\n              {forgotPasswordData.message}\r\n            </p>\r\n          : ''\r\n          }\r\n      <Button type=\"primary\" size=\"large\">\r\n          Восстановить\r\n      </Button>\r\n      </form>\r\n      <p className=\"text text_type_main-default text_color_inactive m-3 mt-15\">\r\n        Вспомнили пароль?\r\n        <Link to='/login'  className={s.link}>\r\n          Войти\r\n        </Link>\r\n\r\n      </p>\r\n    </div>\r\n    </div>\r\n    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default ForgotPaswordPage;\r\n","import React from 'react'\r\nimport {\r\n  Input,\r\n  PasswordInput,\r\n  Button\r\n} from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\"\r\nimport { useSelector, useDispatch} from '../../types'\r\nimport {getResetPassword} from '../../services/actions/registration'\r\nimport Spinner from '../utils/loader'\r\n\r\nimport s from './pages.module.css'\r\n\r\nexport default function ResetPage() {\r\n  const dispatch = useDispatch()\r\n  const resetPasswordData = useSelector(state => state.registration.resetPasswordData)\r\n  const resetPasswordRequest = useSelector(state => state.registration.resetPasswordRequest)\r\n  const resetPasswordFailed = useSelector(state => state.registration.resetPasswordFailed)\r\n  \r\n  const [value, setValue] = React.useState({token: '', password: '', email: ''})\r\n  const onChange = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue({...value, [e.target.name]: e.target.value})\r\n  }\r\n  \r\n  const onSaveClick = (e:any) => {\r\n    e.preventDefault()\r\n    dispatch(getResetPassword(value))\r\n  }\r\n\r\n  const history = useHistory()\r\n  var isForgotEmail\r\n  React.useEffect(\r\n    () => {\r\n      isForgotEmail  = localStorage.getItem('isForgotEmail')\r\n      if (!isForgotEmail) {\r\n        history.replace({pathname: '/login', state: {from: '/'}})\r\n      }\r\n    }, [isForgotEmail]\r\n  )\r\n  \r\n  if (resetPasswordRequest) {\r\n    return (\r\n    <div className={s.container}>\r\n    <div className = {`${s.registration}`}>\r\n    <Spinner/>\r\n    </div>\r\n  </div>\r\n    )\r\n  }\r\n\r\n  if (resetPasswordData) {\r\n    return (\r\n      \r\n    <div className={s.container}>\r\n      <div className = {`${s.registration}`}>\r\n      <Redirect to='/login' />\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n\r\n  if (resetPasswordFailed) {\r\n    return (\r\n      <div className={s.container}>\r\n        <div className = {`${s.registration}`}>\r\n          <p>error {resetPasswordFailed}</p>\r\n        </div>\r\n      </div>\r\n      )\r\n    }\r\n  \r\n  return (\r\n    <>\r\n    <div className={s.container}>\r\n      <div className = {`${s.registration}`}>\r\n\r\n    Восстановление пароля\r\n\r\n    <PasswordInput \r\n        onChange={onChange} \r\n        value={value.password} \r\n        name={'password'} />\r\n    <form onSubmit={(e) => onSaveClick(e)}>\r\n      <Input\r\n        type={'text'}\r\n        placeholder={'Введите код из письма'}\r\n        onChange={onChange}\r\n        value={value.email}\r\n        name={'email'}\r\n        error={false}\r\n        errorText={'Ошибка'}\r\n        size={'default'}\r\n      />\r\n\r\n      <Button type=\"primary\" size=\"large\" >\r\n          Сохранить\r\n      </Button>\r\n    </form>\r\n\r\n    <p>\r\n      Вспомнили пароль?\r\n      <Link to='/login'>\r\n        Войти\r\n      </Link>\r\n    </p>\r\n    </div>\r\n    </div>\r\n    \r\n    </>\r\n  );\r\n}\r\n\r\n","import { TIngredient, useSelector } from '../../../types'\r\nimport { FC } from 'react'\r\n\r\nimport {\r\n  CurrencyIcon\r\n} from '@ya.praktikum/react-developer-burger-ui-components'\r\n\r\nimport s from '../order-feed.module.css'\r\n\r\nexport const Element: FC<any> = (props) => {\r\n  \r\n  const testData = props.data\r\n  const ingredients = useSelector(state => state.ingridients.items)\r\n  let allIngridientsData\r\n  let ingredientsImages = []\r\n  let totalPrice\r\n  if (ingredients.length !== 0) {\r\n    allIngridientsData = testData.ingredients.map((item:string) => {\r\n      const ingredient = ingredients.filter((ingredient:TIngredient) => ingredient._id === item)\r\n      let image\r\n      let price\r\n      if (ingredient[0]){\r\n        image = ingredient[0].image\r\n        price = ingredient[0].price\r\n      }\r\n      return {\r\n        image,\r\n        price\r\n      }\r\n    }).slice(0, 5)\r\n  ingredientsImages = allIngridientsData.slice(0, 5)\r\n  totalPrice = allIngridientsData.reduce((acc:number, item:TIngredient) => acc+item.price, 0)\r\n  }\r\n  return (\r\n    <>\r\n      <li \r\n        className={`${s.card} m-1`}>\r\n        <div className={s.flex_row}>\r\n          <p className=\"text text_type_digits-default pt-3\">#{props.data.number}</p>\r\n          <p className=\"text text_type_main-default text_color_inactive pt-3\">{props.data.createdAt}</p>\r\n        </div>\r\n        <p className=\"text text_type_main-small pt-3\">{props.data.name}</p>\r\n        \r\n        {\r\n          (props.data.status === 'done') \r\n          ? <p className={`${s.done_clr} mb-10s`}>Выполнен</p>\r\n          : (props.data.status === 'pending') \r\n          ? <p className={`mb-10`}>Готовится</p> \r\n          : <p className={`mb-10`}>Создан</p> \r\n        }\r\n        \r\n        <div className={s.flex_row}>\r\n            <ul className={s.images}>\r\n              {\r\n                ingredientsImages.map((item:TIngredient, index:number) => (\r\n                  <li  key={index} className={`${s.round}`}>\r\n                    <img className={s.img} src={item.image} alt=\"-\" />\r\n                  </li>\r\n                ))\r\n              }\r\n            </ul>\r\n            <div className={s.flex_center}>\r\n              <span className=\"text text_type_main-medium p-2\">\r\n                {totalPrice}\r\n              </span> \r\n              <CurrencyIcon type=\"primary\" />\r\n            </div>\r\n        </div>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\n","import React, { FC } from \"react\"\r\nimport {Element} from \"./element/element\"\r\nimport {useHistory, useRouteMatch, useLocation } from 'react-router-dom'\r\nimport { TOrder, TOrderlementModal } from '../../types'\r\nimport Spinner from '../utils/loader'\r\n\r\nimport s from './order-feed.module.css'\r\n\r\ntype TProps = {\r\n  orders: TOrder[]|null;\r\n  modal: {openModal: (e: React.MouseEvent, order:TOrderlementModal)=>void;}\r\n}\r\nexport const OrderFeed: FC<TProps> = (props) => {\r\n\r\n  const {path} = useRouteMatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const wsFeedData = props.orders\r\n\r\n  const clickOrder = (e: React.MouseEvent, item: TOrder) => {\r\n    const order = { type: 'order', item : item}\r\n    props.modal.openModal(e, order)\r\n    history.push( {pathname: `${path}/${item.number}`,\r\n      state: { background: location }})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={s.overflow} >\r\n        <ul >\r\n            {\r\n            wsFeedData \r\n            ? wsFeedData.map((item, index) => (\r\n              <div \r\n                key={index}  \r\n                onClick={(e) => {clickOrder(e, item)}}>\r\n                <Element \r\n                  data={item}/>\r\n              </div>\r\n            ))\r\n            :\r\n            <div>\r\n              <Spinner/>\r\n            </div>\r\n            }\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n","import { useSelector } from '../../types'\r\nimport { TOrder } from '../../types'\r\nimport s from './order-feed.module.css'\r\nimport Spinner from '../utils/loader'\r\n\r\nexport const CookingDoneBoard = () => {\r\n\tconst allOrders = useSelector(state => state.feed.wsFeedData.orders)\r\n\tlet doneOrders: TOrder[]|null = null\r\n\tlet doneOrders2: TOrder[]|null = null\r\n\tif (allOrders) {\r\n\t\tdoneOrders = allOrders.filter((item:TOrder) => item.status === 'done').slice(0,10)\r\n\t\tdoneOrders2 = allOrders.filter((item:TOrder) => item.status === 'done').slice(10,20)\r\n\t}\r\n\tlet cookingOrders: TOrder[]|null = null\r\n\tlet cookingOrders2: TOrder[]|null = null\r\n\tif (allOrders) {\r\n\t\tcookingOrders = allOrders.filter((item:TOrder) => item.status === 'pending').slice(0,10)\r\n\t\tcookingOrders2 = allOrders.filter((item:TOrder) => item.status === 'pending').slice(10,20)\r\n\t}\r\n\t\r\n\tconst totalOrders = useSelector(state => state.feed.wsFeedData.total)\r\n\tconst todayOrders = useSelector(state  => state.feed.wsFeedData.totalToday)\r\n\r\n\r\n\treturn (\r\n\t\t<div className={`${s.overflow} p-3`} >\r\n\t\t\t<div className={`${s.flex_row}`}>\r\n\t\t\t\t<div className={`${s.done}`}>\r\n\t\t\t\t\t<h3 className=\"text text_type_main-medium mb-6\">Готовы:</h3>\r\n\t\t\t\t\t<div className={`${s.list_inner}`}>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tdoneOrders ?\r\n\t\t\t\t\t\t\t\tdoneOrders.map((item, index)=>(\r\n\t\t\t\t\t\t\t\t\t<li key={index} className={`${s.done_clr} text text_type_digits-default mb-2`}>\r\n\t\t\t\t\t\t\t\t\t\t{item.number}\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t)) :\r\n\t\t\t\t\t\t\t\t<Spinner/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tdoneOrders2 ?\r\n\t\t\t\t\t\t\t\tdoneOrders2.map((item, index)=>(\r\n\t\t\t\t\t\t\t\t\t<li key={index} className={`${s.done_clr} text text_type_digits-default mb-2`}>\r\n\t\t\t\t\t\t\t\t\t\t{item.number}\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t)) :\r\n\t\t\t\t\t\t\t\t<Spinner/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.done}>\r\n\t\t\t\t\t<h3 className=\"text text_type_main-medium mb-6\">В работе:</h3>\r\n\t\t\t\t\t<div className={`${s.list_inner}`}>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tcookingOrders ?\r\n\t\t\t\t\t\t\t\tcookingOrders.map((item, index)=>(\r\n\t\t\t\t\t\t\t\t\t<li key={index} className=\"text text_type_digits-default mb-2\">\r\n\t\t\t\t\t\t\t\t\t\t{item.number}\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t)):\r\n\t\t\t\t\t\t\t\t<Spinner/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tcookingOrders2 ?\r\n\t\t\t\t\t\t\t\tcookingOrders2.map((item, index)=>(\r\n\t\t\t\t\t\t\t\t\t<li key={index} className=\"text text_type_digits-default mb-2\">\r\n\t\t\t\t\t\t\t\t\t\t{item.number}\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t)):\r\n\t\t\t\t\t\t\t\t<Spinner/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<h3 className=\"text text_type_main-medium\">Выполнено за все время:</h3>\r\n\t\t\t\t{\r\n\t\t\t\t\ttotalOrders \r\n\t\t\t\t\t? <p className={`${s.shinny_clr} text text_type_digits-large`}>{totalOrders}</p>\r\n\t\t\t\t\t: <Spinner/>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<h3 className=\"text text_type_main-medium\">Выполнено за сегодня:</h3>\r\n\t\t\t\t{\r\n\t\t\t\t\ttodayOrders \r\n\t\t\t\t\t? <p className={`${s.shinny_clr} text text_type_digits-large`}>{todayOrders}</p>\r\n\t\t\t\t\t: <Spinner/>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n","\r\nimport { \r\n  getOrderByIdRequest, \r\n} from '../real-service';\r\nimport { TOrder, AppThunk, AppDispatch, TWsGetMessage,TOrderByID } from '../../types';\r\n\r\nexport const WS_CONNECTION_START:'WS_CONNECTION_START' = 'WS_CONNECTION_START';\r\nexport const WS_CONNECTION_SUCCESS:'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_ERROR:'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\r\nexport const WS_GET_MESSAGE:'WS_GET_MESSAGE' = 'WS_GET_MESSAGE';\r\nexport const WS_SEND_MESSAGE:'WS_SEND_MESSAGE' = 'WS_SEND_MESSAGE';\r\nexport const WS_CONNECTION_CLOSED:'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\r\n\r\nexport const WS_CONNECTION_AUTH_START:'WS_CONNECTION_AUTH_START' = 'WS_CONNECTION_AUTH_START';\r\nexport const WS_CONNECTION_AUTH_SUCCESS:'WS_CONNECTION_AUTH_SUCCESS' = 'WS_CONNECTION_AUTH_SUCCESS';\r\nexport const WS_CONNECTION_AUTH_ERROR:'WS_CONNECTION_AUTH_ERROR' = 'WS_CONNECTION_AUTH_ERROR';\r\nexport const WS_GET_MESSAGE_AUTH:'WS_GET_MESSAGE_AUTH' = 'WS_GET_MESSAGE_AUTH';\r\nexport const WS_SEND_MESSAGE_AUTH:'WS_SEND_MESSAGE_AUTH' = 'WS_SEND_MESSAGE_AUTH';\r\nexport const WS_CONNECTION_AUTH_CLOSED:'WS_CONNECTION_AUTH_CLOSED' = 'WS_CONNECTION_AUTH_CLOSED';\r\n\r\nexport const ORDER_ID_REQUEST:'ORDER_ID_REQUEST' = 'ORDER_ID_REQUEST';\r\nexport const ORDER_ID_SUCCESS:'ORDER_ID_SUCCESS' = 'ORDER_ID_SUCCESS';\r\nexport const ORDER_ID_FAILED:'ORDER_ID_FAILED' = 'ORDER_ID_FAILED';\r\n\r\n\r\nexport interface IGetOrderByIdAction {\r\n  readonly type: typeof ORDER_ID_REQUEST;\r\n}\r\n\r\nexport interface IGetOrderByIdFailedAction {\r\n  readonly type: typeof ORDER_ID_FAILED;\r\n}\r\n\r\nexport interface IGetOrderByIdSuccessAction {\r\n  readonly type: typeof ORDER_ID_SUCCESS;\r\n  readonly payload: TOrderByID;\r\n}\r\n\r\nexport interface IWsInitAction {\r\n  readonly type: typeof WS_CONNECTION_START;\r\n}\r\n\r\nexport interface IWsConnectionSuccessAction {\r\n  readonly type: typeof WS_CONNECTION_SUCCESS;\r\n}\r\n\r\nexport interface IWsConnectionFailedAction {\r\n  readonly type: typeof WS_CONNECTION_ERROR;\r\n  readonly payload: any;\r\n}\r\n\r\nexport interface IWsGetMessageAction {\r\n  readonly type: typeof WS_GET_MESSAGE;\r\n  readonly payload: any;\r\n}\r\n\r\nexport interface IWsSendMessageAction {\r\n  readonly type: typeof WS_SEND_MESSAGE;\r\n}\r\n\r\nexport interface IWsConnectionClosedAction {\r\n  readonly type: typeof WS_CONNECTION_CLOSED;\r\n}\r\n\r\nexport interface IWsInitAuthAction {\r\n  readonly type: typeof WS_CONNECTION_AUTH_START;\r\n}\r\n\r\nexport interface IWsConnectionAuthSuccessAction {\r\n  readonly type: typeof WS_CONNECTION_AUTH_SUCCESS;\r\n}\r\n\r\nexport interface IWsConnectionAuthFailedAction {\r\n  readonly type: typeof WS_CONNECTION_AUTH_ERROR;\r\n  readonly payload: any;\r\n}\r\n\r\nexport interface IWsGetMessageAuthAction {\r\n  readonly type: typeof WS_GET_MESSAGE_AUTH;\r\n  readonly payload: any;\r\n}\r\n\r\nexport interface IWsSendMessageAuthAction {\r\n  readonly type: typeof WS_SEND_MESSAGE_AUTH;\r\n}\r\n\r\nexport interface IWsConnectionAuthClosedAction {\r\n  readonly type: typeof WS_CONNECTION_AUTH_CLOSED;\r\n}\r\n\r\nexport type TFeedActions = \r\nIGetOrderByIdAction |\r\nIGetOrderByIdFailedAction |\r\nIGetOrderByIdSuccessAction|\r\nIWsInitAction |\r\nIWsConnectionSuccessAction |\r\nIWsConnectionFailedAction |\r\nIWsGetMessageAction |\r\nIWsSendMessageAction |\r\nIWsConnectionClosedAction |\r\nIWsInitAuthAction |\r\nIWsConnectionAuthSuccessAction |\r\nIWsConnectionAuthFailedAction |\r\nIWsGetMessageAuthAction |\r\nIWsSendMessageAuthAction |\r\nIWsConnectionAuthClosedAction;\r\n\r\nexport const wsInitAction = (): IWsInitAction => ({\r\n  type: WS_CONNECTION_START\r\n});\r\n\r\nexport const wsConnectionSuccessAction = (): IWsConnectionSuccessAction => ({\r\n  type: WS_CONNECTION_SUCCESS\r\n});\r\n\r\nexport const wsConnectionFailedAction = (payload:TWsGetMessage): IWsConnectionFailedAction => ({\r\n  type: WS_CONNECTION_ERROR,\r\n  payload: payload\r\n});\r\n\r\nexport const wsGetMessageAction = (payload:TWsGetMessage): IWsGetMessageAction => ({\r\n  type: WS_GET_MESSAGE,\r\n  payload: payload\r\n});\r\n\r\nexport const wsSendMessageAction = (): IWsSendMessageAction => ({\r\n  type: WS_SEND_MESSAGE\r\n});\r\n\r\nexport const wsConnectionClosedAction = (): IWsConnectionClosedAction => ({\r\n  type: WS_CONNECTION_CLOSED\r\n});\r\n\r\nexport const wsInitAuthAction = (): IWsInitAuthAction => ({\r\n  type: WS_CONNECTION_AUTH_START\r\n}); \r\n\r\nexport const wsConnectionAuthSuccessAction = (): IWsConnectionAuthSuccessAction => ({\r\n  type: WS_CONNECTION_AUTH_SUCCESS\r\n});\r\n\r\nexport const wsConnectionAuthFailedAction = (payload:TWsGetMessage): IWsConnectionAuthFailedAction => ({\r\n  type: WS_CONNECTION_AUTH_ERROR,\r\n  payload: payload\r\n});\r\n\r\nexport const wsGetMessageAuthAction = (payload:TWsGetMessage): IWsGetMessageAuthAction => ({\r\n  type: WS_GET_MESSAGE_AUTH,\r\n  payload: payload\r\n});\r\n\r\nexport const wsSendMessageAuthAction = (): IWsSendMessageAuthAction => ({\r\n  type: WS_SEND_MESSAGE_AUTH\r\n});\r\n\r\nexport const wsConnectionAuthClosedAction = (): IWsConnectionAuthClosedAction => ({\r\n  type: WS_CONNECTION_AUTH_CLOSED\r\n});\r\n\r\nexport const getOrderByIdAction = (): IGetOrderByIdAction => ({\r\n  type: ORDER_ID_REQUEST\r\n});\r\n\r\nexport const getOrderByIdtOrderFailedAction = (): IGetOrderByIdFailedAction => ({\r\n  type: ORDER_ID_FAILED\r\n});\r\n\r\nexport const getOrderByIdSuccessAction = (res:TOrderByID): IGetOrderByIdSuccessAction => ({\r\n  type: ORDER_ID_SUCCESS,\r\n  payload: res\r\n});\r\n\r\nexport const getOrderById: AppThunk = (data: string) => (dispatch: AppDispatch) => {\r\n  \r\n  dispatch(getOrderByIdAction());\r\n  getOrderByIdRequest(data)\r\n  .then(res => {\r\n    if (res && res.success) {\r\n      dispatch(getOrderByIdSuccessAction(res));\r\n    } else {\r\n      dispatch(getOrderByIdtOrderFailedAction());\r\n    }\r\n  })\r\n  .catch(err => {\r\n      dispatch(getOrderByIdtOrderFailedAction());\r\n  })\r\n}","import { useEffect, FC } from 'react';\r\nimport {\r\n  OrderFeed,\r\n  CookingDoneBoard\r\n} from '../order-feed/index'\r\nimport { wsInitAction } from '../../services/actions/feed';\r\nimport { useSelector, useDispatch } from '../../types'\r\n\r\nimport s from './pages.module.css'\r\n\r\ntype TProps = {\r\n  modal: any\r\n}\r\n\r\nexport const FeedPage: FC<TProps> = (props) => {\r\n  const dispatch = useDispatch()\r\n  const wsFeedData = useSelector(state => state.feed.wsFeedData.orders)\r\n\r\n  useEffect(\r\n    () => {\r\n        dispatch(wsInitAction())\r\n    }, [] \r\n  );\r\n  \r\n\r\n  return (\r\n    <>\r\n      <div className={s.container}>\r\n        <div className={s.column}>\r\n          {/* <div onClick={() => socket.send('test')}>Click me!!!</div> */}\r\n          <p className=\"text text_type_main-large\">\r\n            Лента заказов\r\n          </p>\r\n        </div>\r\n      </div>\r\n  \r\n      <div className={`${s.row}`}>\r\n        <div className={`${s.column} ${s.left}`}>\r\n          <OrderFeed modal={props.modal} orders={wsFeedData}/>  \r\n        </div>\r\n        <div className={`${s.column} ${s.right}`}>\r\n          <CookingDoneBoard />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default FeedPage","import {\r\n  CurrencyIcon\r\n} from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from '../../types'\r\nimport { useParams } from 'react-router-dom'\r\nimport { getOrderById } from '../../services/actions/feed';\r\nimport { TIngredient } from '../../types';\r\n\r\nimport s from './pages.module.css'\r\n\r\nexport default function FeedIdPage() {\r\n  const param = useParams<{id:string}>();\r\n  const dispatch = useDispatch()\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getOrderById(param.id))\r\n  }, [dispatch, param.id])\r\n\r\n\r\n  const orderId = useSelector(state => state.feed.orderId)\r\n  const data = orderId\r\n  // if (!data && (data === undefined)) {\r\n  //   return <Redirect to='/404' />\r\n  // }\r\n  \r\n  const ingredients = useSelector(state => state.ingridients.items)\r\n  let allIngridientsData\r\n  let ingredientsImages: any = []\r\n  let totalPrice\r\n  if (data && ingredients.length !== 0) {\r\n    allIngridientsData = data.ingredients.map((item:string) => {\r\n      const ingredient = ingredients.filter((ingredient:TIngredient) => ingredient._id === item)\r\n      let image\r\n      let price\r\n      let name\r\n      if (ingredient[0]){\r\n        image = ingredient[0].image\r\n        price = ingredient[0].price\r\n        name = ingredient[0].name\r\n      }\r\n      return {\r\n        image,\r\n        price,\r\n        name\r\n      }\r\n    })\r\n  ingredientsImages = allIngridientsData\r\n  totalPrice = allIngridientsData.reduce((acc:number, item: any) => acc+item.price, 0)\r\n  }\r\n\r\n  if (!data) {\r\n    return <div>lalala</div>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={s.container}>\r\n        <p className={`${s.center} text text_type_digits-default mb-2`}>#{data.number}</p>\r\n        <p className=\"text text_type_main-medium\">{data.name}</p>\r\n        {\r\n          data.status \r\n          ? <p className={`${s.done_clr} mb-10`}>Выполнен</p>\r\n          : <p className={`mb-10`}>Готовится</p>}\r\n        \r\n        <p className=\"text text_type_main-medium mb-6\">Состав:</p>\r\n        <ul>\r\n            \r\n            {\r\n              ingredientsImages.map((item: TIngredient, index: number) => (\r\n                \r\n                <li  key={index} className={s.flex_row}>\r\n                  <div className={s.flex_center}>\r\n                    <img className={s.img} src={item.image} alt=\"-\" />\r\n                    <span className='p-3'>{item.name}</span>\r\n                  </div>\r\n                  <div className={`${s.flex_center} mb-3`}>\r\n                      <span className='p-2'>{item.type ==='bun'? '2' : '1'} x {item.price}</span>\r\n                      <CurrencyIcon type=\"primary\" />\r\n                  </div>\r\n                </li>\r\n              ))\r\n            }\r\n        </ul>\r\n        \r\n        <div className={s.flex_row}>\r\n            <p className=\"text text_type_main-default text_color_inactive pt-3\">{data.createdAt}</p>\r\n            \r\n            <div className={s.flex_center}>\r\n              <span className=\"text text_type_main-medium p-2\">\r\n                {totalPrice}\r\n              </span> \r\n              <CurrencyIcon type=\"primary\" />\r\n            </div>\r\n          </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  Input,\r\n  Button\r\n} from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { useSelector, useDispatch} from '../../types'\r\nimport {patchUser} from '../../services/actions/registration'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\n\r\nexport const ProdileEdit = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const user = useSelector(state => state.registration.user)\r\n  let data \r\n  if (user) {\r\n    data = {...user, password: ''}\r\n  } else {\r\n    data = {name:'',email:'',password:'',}\r\n  }\r\n  const [value, setValue] = React.useState(data)\r\n  const onChange = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue({...value, [e.target.name]: e.target.value})\r\n  }\r\n  const cancel = () => {\r\n    console.log('cancel - tbc')\r\n    \r\n  }\r\n  const save = (e:any) => {\r\n    e.preventDefault()\r\n    dispatch(patchUser(value))\r\n  }\r\n  \r\n  // useEffect(() => {\r\n  //   dispatch(getItems())\r\n  // }, [dispatch])\r\n  if (!data) {\r\n    return <Redirect to='/login' />\r\n  }\r\n  return (\r\n    <form onSubmit={(e) => save(e)}>\r\n    <Input\r\n      type={'text'}\r\n      placeholder={'Имя'}\r\n      onChange={e => onChange(e)}\r\n      icon={'EditIcon'}\r\n      value={value?.name}\r\n      name={'name'}\r\n      error={false}\r\n      errorText={'Ошибка'}\r\n      size={'default'} />\r\n\r\n    <Input\r\n      type={'text'}\r\n      placeholder={'E-mail'}\r\n      onChange={e => onChange(e)}\r\n      icon={'EditIcon'}\r\n      value={value?.email}\r\n      name={'email'}\r\n      error={false}\r\n      errorText={'Ошибка'}\r\n      size={'default'} />\r\n\r\n    <Input\r\n      type={'text'}\r\n      placeholder={'Пароль'}\r\n      onChange={e => onChange(e)}\r\n      icon={'EditIcon'}\r\n      value={value.password}\r\n      name={'password'}\r\n      error={false}\r\n      errorText={'Ошибка'}\r\n      size={'default'} />\r\n\r\n    <Button type=\"secondary\" onClick={() => cancel()}>Отмена</Button>\r\n    <Button>Сохранить</Button>\r\n    </form>\r\n  );\r\n}\r\n\r\n","import { Redirect, Route, RouteProps } from 'react-router-dom';\r\nimport { useEffect, FC } from 'react';\r\nimport { useSelector, useDispatch} from '../../types'\r\nimport { getUser } from '../../services/actions/registration';\r\nimport { getCookie } from '../../services/utils';\r\n\r\nexport const ProtectedRoute: FC<RouteProps> = ({ children, ...rest }) => {\r\n  const user = useSelector(state => state.registration.user)\r\n  const dispatch = useDispatch()\r\n\r\n  const init = async () => {\r\n      const accessToken = getCookie('accessToken')\r\n      dispatch(getUser(accessToken))\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, []);\r\n\r\n  // if (userRequest) {\r\n  //   return <div>Loading</div>;\r\n  // }\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n      user ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/login',\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","import { useEffect, FC } from 'react';\r\nimport { wsInitAuthAction } from '../../services/actions/feed';\r\nimport { useSelector } from '../../types'\r\n\r\nimport {\r\n  OrderFeed,\r\n} from '../order-feed/index'\r\n\r\nimport {ProdileEdit} from '../profile'\r\nimport {  Switch, NavLink } from 'react-router-dom';\r\nimport { useDispatch } from '../../types'\r\nimport {getLogout} from '../../services/actions/registration'\r\nimport { ProtectedRoute } from '../protected-route/protected-route';\r\n\r\nimport s from './pages.module.css'\r\n\r\ntype TProps = {\r\n  modal: any\r\n}\r\nconst ProfilePage: FC<TProps> = (props)  => {\r\n  const refreshToken = localStorage.getItem('refreshToken')\r\n  const dispatch = useDispatch();\r\n  const wsFeedDataAuth = useSelector(state => state.feed.wsFeedDataAuth?.orders)\r\n\r\n  const exit = (e:any) => {\r\n    e.preventDefault()\r\n    dispatch(getLogout(refreshToken))\r\n  }\r\n  \r\n  useEffect(\r\n    () => {\r\n        dispatch(wsInitAuthAction())\r\n    }, [] \r\n  );\r\n  \r\n  return (\r\n    <>\r\n      <div className={s.container}>\r\n      </div>\r\n\r\n      <div className={`${s.row}`}>\r\n        <div className={`${s.column} ${s.left} ${s.flex_column} ml-10`}>\r\n          \r\n          <NavLink  exact\r\n            to='/profile' \r\n            className={`${s.sidebar__link} text text_type_main-medium text_color_inactive m-3`}\r\n            activeClassName={s.active}>\r\n              Профиль\r\n          </NavLink >\r\n          <NavLink  \r\n            to='/profile/orders' \r\n            className={`${s.sidebar__link} text text_type_main-medium text_color_inactive m-3`}\r\n            activeClassName={s.active}>\r\n              История Заказов\r\n          </NavLink >\r\n          <div  \r\n            onClick={exit} \r\n            className={`${s.sidebar__link} text text_type_main-medium text_color_inactive m-3`}>\r\n            Выход\r\n          </div >\r\n          <p \r\n            className=\"text text_type_main-default text_color_inactive m-3\">\r\n              В этом разделе вы можете изменить свои персональные данные\r\n          </p>\r\n        </div>\r\n\r\n        <div className={`${s.column} ${s.right}`}>\r\n          \r\n            <Switch>\r\n              <ProtectedRoute path=\"/profile\" exact>\r\n                <ProdileEdit />\r\n              </ProtectedRoute>\r\n              <ProtectedRoute path=\"/profile/orders\" exact>\r\n               <OrderFeed  modal={props.modal} orders={wsFeedDataAuth}/>  \r\n              </ProtectedRoute>\r\n              <ProtectedRoute>\r\n                Watt?\r\n              </ProtectedRoute>\r\n            </Switch>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfilePage","import React from 'react';\r\nimport s from './pages.module.css'\r\nimport { useSelector, useDispatch} from '../../types'\r\nimport {useParams} from 'react-router-dom'\r\nimport {getItems} from \"../../services/actions/ingridients\"\r\nimport IngridientDetails from '../ingridient-details/ingridient-details'\r\nimport { TIngredient } from '../../types';\r\nimport { TCurrentItemToView } from '../../types';\r\n\r\nfunction IngridientsIdPage() {\r\n\r\n  const items = useSelector(state => state.ingridients.items)\r\n  const {id} = useParams<{id:string}>()\r\n  const temp = items.find((el:TIngredient) => el._id === id)\r\n  const currentItemToView: TCurrentItemToView = {\r\n    type: 'ingridient',\r\n    item: temp\r\n  }\r\n  const dispatch = useDispatch()\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getItems())\r\n  }, [dispatch])\r\n\r\n  \r\n  return (\r\n    <>\r\n     <div className={s.container}>\r\n          <IngridientDetails currentItemToView={currentItemToView}/>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default IngridientsIdPage;\r\n","import { FC } from 'react'\r\nimport {\r\n  ConstructorElement, \r\n} from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { TIngredient } from '../../types'\r\n\r\nimport burgerConstructorStyles from './burger-constructor.module.css'\r\n\r\ntype TProps = {\r\n  buns: TIngredient | { price: number; name:string;image:string};\r\n  type: \"top\" | 'bottom' | undefined\r\n}\r\n\r\nconst FixedBun: FC<TProps> = (props) => {\r\n  const data = props\r\n  \r\n  return (\r\n    <>\r\n      {\r\n      (data.buns.name !== 'name') \r\n      ?\r\n      <div className={burgerConstructorStyles.flex}>\r\n        <div className={`${burgerConstructorStyles.center} pb-2`}>\r\n          <ConstructorElement\r\n              text={data.buns.name}\r\n              thumbnail={data.buns.image}\r\n              price={data.buns.price}\r\n              type={data.type}\r\n              isLocked={true}\r\n          />\r\n        </div>\r\n      </div>\r\n      : \r\n      \r\n      <div className={burgerConstructorStyles.template} >\r\n        Кидай сюда булочки\r\n        </div>\r\n      }\r\n  </>\r\n  );\r\n}\r\n\r\nexport default FixedBun;\r\n","import { FC } from 'react'\r\nimport {useRef} from 'react';\r\nimport {\r\n  ConstructorElement, \r\n  DragIcon, \r\n} from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { useDispatch } from '../../types'\r\nimport { useDrop, useDrag } from \"react-dnd\";\r\nimport {\r\n  DELETE_ITEM_FROM_CONSTRUCTOR,\r\n  CHANGE_ORDER_OF_ITEMS_IN_CONSTRUCTOR\r\n} from \"../../services/actions/constructor\"\r\nimport { TIngredient, TDropIngredient } from '../../types';\r\n\r\nimport burgerConstructorStyles from './burger-constructor.module.css'\r\n\r\ntype TProps = {\r\n  item: TIngredient;\r\n  index: number\r\n}\r\n\r\nconst Ingridient: FC<TProps> = (props) => {\r\n  \r\n  const moveCard = (dragIndex: number, hoverIndex: number) => {\r\n    dispatch({\r\n      type: CHANGE_ORDER_OF_ITEMS_IN_CONSTRUCTOR,\r\n      dragIndex,\r\n      hoverIndex\r\n    });\r\n  }\r\n  const item = props.item\r\n  const index = props.index\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  const ref = useRef(null);\r\n\r\n  const [, dropRef] = useDrop({\r\n    accept: \"choosen\",\r\n    drop(item: TDropIngredient) {      \r\n      if (!ref.current) {\r\n          return;\r\n      }\r\n      const dragIndex = item.index;\r\n      const hoverIndex = index;\r\n      if (dragIndex === hoverIndex) {\r\n          return;\r\n      }\r\n      moveCard(dragIndex, hoverIndex);\r\n    },\r\n});\r\n  \r\n  const [{ isDragging }, drag] = useDrag({\r\n      type: \"choosen\",\r\n      item: () => {\r\n          return { item, index };\r\n      },\r\n      collect: (monitor) => ({\r\n          isDragging: monitor.isDragging(),\r\n      }),\r\n  });\r\n\r\n  drag(dropRef(ref));\r\n  const opacity = isDragging ? 0.5 : 1;\r\n\r\n  const style = {\r\n    cursor: 'move',\r\n};\r\n  return (\r\n      <div \r\n        ref={ref} \r\n        className={` ${burgerConstructorStyles.center}  pb-2`}\r\n        style={{ ...style, opacity }}\r\n      >\r\n        <DragIcon type=\"primary\" />\r\n        <ConstructorElement\r\n          text={item.name}\r\n          thumbnail={item.image}\r\n          price={item.price}\r\n          handleClose={\r\n            () => {\r\n              dispatch({\r\n                type: DELETE_ITEM_FROM_CONSTRUCTOR,\r\n                index,\r\n              })\r\n            }\r\n          }/>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Ingridient;","import { FC } from 'react'\r\nimport Ingridient from './ingridient' \r\nimport { TIngredient } from '../../types'\r\n\r\nimport burgerConstructorStyles from './burger-constructor.module.css'\r\n\r\ntype TProps = {\r\n  items: TIngredient[]\r\n}\r\n\r\nconst Ingridients: FC<TProps> = (props) => {\r\n  const data = props\r\n  \r\n\r\n  return (\r\n      <div \r\n        className={`${burgerConstructorStyles.overflow}  \r\n        ${burgerConstructorStyles.test}`}\r\n      >\r\n        {\r\n          data.items[0]\r\n          ?\r\n          data.items.map((item: TIngredient, index: number) => \r\n          <div key={index}>\r\n            <Ingridient \r\n              item={item} \r\n              index={index}\r\n            />\r\n          </div>\r\n          )\r\n          :\r\n          \r\n          <div className={burgerConstructorStyles.template} >\r\n            Сюда кидай ингридиенты\r\n            </div>\r\n        }\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Ingridients;","import { FC } from 'react'\r\nimport {\r\n  Button,\r\n  CurrencyIcon, \r\n} from '@ya.praktikum/react-developer-burger-ui-components'\r\n\r\nimport { useSelector } from '../../types'\r\nimport {useHistory, useLocation} from 'react-router-dom'\r\n\r\nimport burgerConstructorStyles from './burger-constructor.module.css'\r\n\r\ntype TProps = {\r\n  modal: {openModal: () => void}\r\n}\r\n\r\nconst TotalPrice: FC<TProps> = (props) => {\r\n  const totalPrice = useSelector(state => state.burgerConstructor.totalPrice)\r\n  const chosenBuns = useSelector(state => state.burgerConstructor.chosenBuns)\r\n  const user = useSelector(state => state.registration.user)\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n\r\nconst realConfirm = () => {\r\n  props.modal.openModal();\r\n  history.push( {pathname: `/order_confirmation`,\r\n    state: { background: location }})\r\n}\r\n\r\n  const confirmOrder = () => {\r\n    user ? (\r\n      realConfirm()\r\n    ) : (\r\n      history.push({\r\n        pathname: '/login',\r\n        state: {from: location}\r\n    })\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      {\r\n        (chosenBuns.name !== 'name' )\r\n        ?<div className={`${burgerConstructorStyles.flex} ${burgerConstructorStyles.confirm_block}`}>\r\n        <div className={burgerConstructorStyles.total}>\r\n          <span className=\"text text_type_main-large\">\r\n            {totalPrice}\r\n          </span> \r\n          <CurrencyIcon type=\"primary\" />\r\n        </div>\r\n        <Button type=\"primary\"\r\n          onClick={confirmOrder}>\r\n          Оформить заказ\r\n        </Button>\r\n      </div>\r\n        : \r\n        <div></div>\r\n      }\r\n  </>\r\n  );\r\n}\r\n\r\nexport default TotalPrice;\r\n","import { FC } from 'react'\r\nimport { useSelector, useDispatch } from '../../types'\r\nimport FixedBun from './fixed-bun'\r\nimport Ingridients from './ingridients'\r\nimport TotalPrice from './total-price'\r\n\r\nimport { useDrop } from \"react-dnd\";\r\nimport {\r\n  ADD_ITEM_TO_CONSTRUCTOR,\r\n} from \"../../services/actions/constructor\"\r\n\r\n\r\ntype TProps = {\r\n  modal: {openModal: () => void}\r\n}\r\n\r\nconst BurgerConstructor: FC<TProps> = (props) => {\r\n  \r\n  const chosenItems = useSelector(state => state.burgerConstructor.chosenItems)\r\n  const chosenBuns = useSelector(state => state.burgerConstructor.chosenBuns)\r\n \r\n  const dispatch = useDispatch();\r\n  \r\n  const [ ,drop] = useDrop({\r\n    accept: \"ingridients\",\r\n    drop(item) {\r\n      dispatch({\r\n            type: ADD_ITEM_TO_CONSTRUCTOR,\r\n            item,\r\n        });\r\n    },\r\n  });\r\n  return (\r\n    <div ref={drop} >\r\n      <FixedBun buns={chosenBuns} type=\"top\"/>\r\n      <Ingridients items={chosenItems}/>\r\n      <FixedBun buns={chosenBuns} type=\"bottom\"/>\r\n      <TotalPrice modal={props.modal}/>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default BurgerConstructor;\r\n","import { FC } from 'react';\r\nimport {\r\n  Counter, \r\n  CurrencyIcon, \r\n} from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { useSelector } from '../../../types'\r\nimport { TIngredient } from '../../../types';\r\n\r\nimport ingridientCardStyles from './ingridient-card.module.css'\r\n\r\n\r\ntype TProps = {\r\n  data: TIngredient;\r\n}\r\n\r\nconst IngridientCard: FC<TProps> = (props) => {\r\n\r\n  const chosenItems = useSelector(state => state.burgerConstructor.chosenItems)\r\n  const chosenBuns = useSelector(state => state.burgerConstructor.chosenBuns)\r\n  var counter = 0\r\n  if ( props.data.type === 'bun'){\r\n    if (chosenBuns) {\r\n    counter = chosenBuns._id === props.data._id ? 1 : 0\r\n    }\r\n  } else {\r\n    if (chosenItems) {\r\n      counter = chosenItems.filter((item: TIngredient) => item._id === props.data._id).length\r\n    } \r\n  }\r\n  \r\n  return(\r\n    <div>\r\n      <div style={{position: 'relative'}}>\r\n        {\r\n          counter !== 0 \r\n          ? \r\n          <Counter count={counter}/> \r\n          : \"\"\r\n        }\r\n      </div>\r\n      <img className={ingridientCardStyles.img} src={props.data.image} alt=\"burger\" />\r\n      <div className={ingridientCardStyles.total}>\r\n        <span className=\"text text_type_digits-default\">\r\n          {props.data.price}\r\n        </span> \r\n        <CurrencyIcon type=\"primary\" />\r\n      </div>\r\n\r\n      <p className=\"text text_type_main-default\">\r\n        {props.data.name}\r\n      </p>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default IngridientCard","import { FC } from 'react';\r\nimport IngridientCard from '../ingridient-card/ingridient-card'\r\nimport listByTypeStyles from './list-by-type.module.css'\r\nimport { useDrag } from \"react-dnd\";\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport {TIngredient, TElementModal } from '../../../types'\r\n\r\ntype TProps = {\r\n  item: TIngredient;\r\n  onClick: {openModal: (e:React.MouseEvent, order:TElementModal) => void};\r\n}\r\n\r\nconst ListByType: FC<TProps> = (props) => {\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  const item = props.item\r\n  \r\n\r\n  const [, dragRef] = useDrag({\r\n      type: \"ingridients\",\r\n      item: item,\r\n      collect: monitor => ({\r\n          isDrag: monitor.isDragging()\r\n      })\r\n  });\r\n\r\n  const clickIngridient = (e: React.MouseEvent) => {\r\n    const order: TElementModal = { type: 'ingridient', item : item}\r\n    props.onClick.openModal(e, order)\r\n    history.push( {pathname: `/ingredients/${item._id}`,\r\n      state: { background: location }})\r\n  }\r\n\r\n  return (\r\n    <li\r\n    className={listByTypeStyles.card}\r\n    // onClick={(e) => props.onClick(e, item)}\r\n    onClick={clickIngridient}\r\n    ref={dragRef}>\r\n        <IngridientCard data={item} />\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ListByType;\r\n","import { FC } from 'react';\r\nimport listByTypeStyles from './list-by-type.module.css'\r\nimport Element from './element'\r\nimport { TIngredient } from '../../../types';\r\n\r\ntype TProps = {\r\n  data: TIngredient[];\r\n  onClick: {openModal: () => void}\r\n}\r\n\r\nconst ListByType: FC<TProps> = (props) => {\r\n  return (\r\n    <>\r\n      <ul className={listByTypeStyles.list_by_type}>\r\n          {\r\n          props.data.map((item, index) => (\r\n            <div key={index}>\r\n            <Element \r\n              item={item} \r\n              onClick={props.onClick}/>\r\n            </div>\r\n          ))\r\n          }\r\n      </ul>\r\n    </>\r\n    \r\n  );\r\n}\r\n\r\nexport default ListByType;\r\n","import React, {FC} from 'react';\r\nimport {\r\n  Tab\r\n} from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport ListByType from './list-by-type/list-by-type'\r\nimport { useSelector, useDispatch } from '../../types'\r\nimport { TIngredient } from '../../types';\r\nimport {tabSwitchAction} from '../../services/actions/ingridients'\r\n\r\nimport burgerIngridientsStyles from './burger-ingridients.module.css'\r\n\r\ntype TProps = {\r\n  modal: {openModal: () => void}\r\n}\r\n\r\nconst BurgerIngridients: FC<TProps> = (props) => {\r\n  const dispatch = useDispatch()\r\n  const items = useSelector(state => state.ingridients.items)\r\n  const current = useSelector(state => state.ingridients.currentTab)\r\n  \r\n  let data_buns = items.filter((obj1: TIngredient)=> obj1.type === \"bun\");\r\n  let data_sauces = items.filter((obj1: TIngredient) => obj1.type === \"sauce\");\r\n  let data_mains = items.filter((obj1: TIngredient) => obj1.type === \"main\");\r\n  \r\n  const myRefScrollBuns = React.useRef<HTMLDivElement>(null)\r\n  const myRefScrollSauces = React.useRef<HTMLDivElement>(null)\r\n  const myRefScrollMains = React.useRef<HTMLDivElement>(null)\r\n  const myRefScrollContainer = React.useRef<HTMLDivElement>(null)\r\n  \r\n  const executeScrollBuns = () => {\r\n    if (myRefScrollBuns.current ) {\r\n      myRefScrollBuns.current.scrollIntoView()\r\n      dispatch(tabSwitchAction(\"buns\"))\r\n    }\r\n  }      \r\n\r\n  const executeScrollSauces = () => {\r\n    if (myRefScrollSauces.current ) {\r\n      myRefScrollSauces.current.scrollIntoView()\r\n      dispatch(tabSwitchAction(\"sauces\"))\r\n    }\r\n  }    \r\n\r\n  const executeScrollMains = () => {\r\n    if (myRefScrollMains.current ) {\r\n      myRefScrollMains.current.scrollIntoView()\r\n      dispatch(tabSwitchAction(\"mains\"))\r\n    }\r\n  }    \r\n\r\n\r\n  const handleScrollIngredients = () => {\r\n    let bunsDis\r\n    let saucesDis\r\n    if (myRefScrollBuns.current && myRefScrollContainer.current) {\r\n      bunsDis = myRefScrollBuns.current.getBoundingClientRect().top - myRefScrollContainer.current.getBoundingClientRect().top\r\n    \r\n    }\r\n    if (myRefScrollSauces.current && myRefScrollContainer.current) {\r\n      saucesDis = myRefScrollSauces.current.getBoundingClientRect().top - myRefScrollContainer.current.getBoundingClientRect().top\r\n    \r\n    }\r\n    if (bunsDis && bunsDis>=-210) {\r\n      dispatch(tabSwitchAction(\"buns\"))\r\n      return\r\n    }\r\n    if (saucesDis && saucesDis>=-485) {\r\n      dispatch(tabSwitchAction(\"sauces\"))\r\n    } else {\r\n      dispatch(tabSwitchAction(\"mains\"))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{ display: 'flex' }} >\r\n        <Tab value=\"one\" active={current === 'buns'} onClick={executeScrollBuns}>\r\n          Булки\r\n        </Tab>\r\n        <Tab value=\"two\" active={current === 'sauces'} onClick={executeScrollSauces}>\r\n          Соусы\r\n        </Tab>\r\n        <Tab value=\"three\" active={current === 'mains'} onClick={executeScrollMains}>\r\n          Начинки\r\n        </Tab>\r\n      </div>\r\n      <div  ref={myRefScrollContainer}\r\n        className={burgerIngridientsStyles.overflow} \r\n        onScroll={handleScrollIngredients}\r\n      >\r\n        <div >\r\n          <p ref={myRefScrollBuns}\r\n            className={`${burgerIngridientsStyles.headers} text text_type_main-medium`}\r\n          >\r\n            Булки\r\n          </p>\r\n          <ListByType data={data_buns}\r\n            onClick={props.modal}/>\r\n        </div>\r\n        <div >\r\n          <p ref={myRefScrollSauces}\r\n            className={`${burgerIngridientsStyles.headers} text text_type_main-medium`}>\r\n           Соусы\r\n          </p>\r\n          \r\n          <ListByType data={data_sauces}\r\n            onClick={props.modal}/>\r\n        </div>\r\n        <div >\r\n          <p ref={myRefScrollMains}\r\n            className={`${burgerIngridientsStyles.headers} text text_type_main-medium`}>\r\n            Начинки\r\n          </p>\r\n          \r\n          <ListByType data={data_mains}\r\n            onClick={props.modal}/>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default BurgerIngridients;\r\n","import { FC } from 'react';\r\nimport BurgerConstructor from '../burger-constructor/burger-constructor'\r\nimport BurgerIngridients from '../burger-ingridients/burger-ingridients'\r\n\r\nimport s from './pages.module.css'\r\n\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\n\r\ntype TProps = {\r\n  modal: any;\r\n  // modal: {openModal: (e: React.MouseEvent, order:TOrderlementModal)=>void;}\r\n\r\n}\r\n\r\nconst MainPage: FC<TProps> = (props) => {\r\n  \r\n  \r\n  return (\r\n    <>\r\n      <div className={s.container}>\r\n        <div className={s.column}>\r\n          <p className=\"text text_type_main-large\">\r\n            Соберите бургер\r\n          </p>\r\n        </div>\r\n      </div>\r\n      \r\n      <DndProvider backend={HTML5Backend}>\r\n        <div className={`${s.row}`}>\r\n          <div className={`${s.column} ${s.left}`}>\r\n            <BurgerIngridients\r\n              modal={props.modal}/>\r\n          </div>\r\n          <div className={`${s.column} ${s.right}`} id='burger_constructor'>\r\n            <BurgerConstructor \r\n              modal={props.modal}/>\r\n          </div>\r\n        </div>\r\n      </DndProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","import { Redirect, Route } from 'react-router-dom';\r\nimport { useEffect, FC } from 'react';\r\nimport { useSelector, useDispatch} from '../../types'\r\nimport { getUser } from '../../services/actions/registration';\r\nimport { getCookie } from '../../services/utils';\r\nimport {useLocation, RouteProps } from 'react-router-dom' \r\nimport { TLocation } from '../../types';\r\n\r\nexport const AuthProtectedRoute: FC<RouteProps> = ({ children, ...rest }) => {\r\n  const user = useSelector(state => state.registration.user)\r\n  const userRequest = useSelector(state => state.registration.userRequest)\r\n  const dispatch = useDispatch()\r\n  const location = useLocation<TLocation>()\r\n\r\n  const init = async () => {\r\n      const accessToken = getCookie('accessToken')\r\n      dispatch(getUser(accessToken))\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, []);\r\n\r\n  if (userRequest) {\r\n    return <></>;\r\n  }\r\n  const path = location?.state?.from?.pathname ? location?.state?.from?.pathname : {state: {from: '/'}}\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        user ? (\r\n          <>\r\n            <Redirect\r\n              to={path}\r\n            />\r\n          </>\r\n        ) : (\r\n          children\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from 'react'\r\nimport AppHeader from '../app-header/app-header'\r\n\r\nimport Modal from '../modal/modal'\r\nimport OrderDetails from '../order-details/order-details'\r\nimport IngridientDetails from '../ingridient-details/ingridient-details'\r\nimport OrderDetailsModal from  '../order-details-modal/order-details-modal'\r\n\r\nimport { useSelector, useDispatch, TIngredient } from '../../types'\r\nimport {\r\n  getOrder\r\n} from '../../services/actions/constructor'\r\nimport {\r\n  setCurrentItemToView,\r\n} from '../../services/actions/ingridients'\r\n\r\nimport { Switch, Route, useHistory, useLocation } from 'react-router-dom';\r\nimport {\r\n  Error404,\r\n  LoginPage,\r\n  RegisterPage,\r\n  ForgotPasswordPage,\r\n  ResetPasswordPage,\r\n  FeedPage,\r\n  FeedIdPage,\r\n  ProfilePage,\r\n  IngridientsIdPage,\r\n  MainPage,\r\n} from '../pages'\r\nimport { getToken, getUser } from '../../services/actions/registration'\r\n\r\nimport { ProtectedRoute, AuthProtectedRoute } from '../protected-route'\r\nimport {getItems} from \"../../services/actions/ingridients\"\r\n\r\nimport {\r\n  orderResetAction,\r\n} from '../../services/actions/constructor';\r\n\r\nimport {TLocation} from '../../types'\r\n\r\nconst App: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  \r\n  const history = useHistory()\r\n  \r\n  const location = useLocation<TLocation>()\r\n\r\n  const [visible, setVisible] = React.useState(false)\r\n\r\n  const chosenBuns = useSelector(state => state.burgerConstructor.chosenBuns)\r\n  const chosenItems = useSelector(state => state.burgerConstructor.chosenItems)\r\n\r\n  const openModal = (event: KeyboardEvent, item: TIngredient) => {\r\n      if (item !== undefined) {\r\n        dispatch(setCurrentItemToView(item))\r\n      } else {\r\n        const dataIds = chosenItems.map((item) => item._id)\r\n        dataIds.push(chosenBuns._id)\r\n        dataIds.splice(1, 0, chosenBuns._id)\r\n        const data11 = {\r\n          ingredients: dataIds\r\n        }\r\n        dispatch(getOrder(data11))\r\n      }\r\n      \r\n      setVisible(true)\r\n  }\r\n  const closeModal = () => {\r\n      dispatch(setCurrentItemToView(null))\r\n      setVisible(false)\r\n      dispatch(orderResetAction());\r\n      if (location?.state?.background?.pathname) {\r\n        history.push(`${location.state.background.pathname}`)\r\n      }\r\n  }\r\n  \r\n  React.useEffect(() => {\r\n    dispatch(getItems())\r\n  }, [dispatch])\r\n  \r\n  React.useEffect(() => {\r\n    document.addEventListener(\"keyup\", handleKeyUp);\r\n    return () => {\r\n      document.removeEventListener(\"keyup\", handleKeyUp);\r\n    }\r\n  });\r\n  const handleKeyUp = (e: KeyboardEvent) => {\r\n    // const keys = {\r\n    //   27: ():void => {\r\n    //     e.preventDefault();\r\n    //     closeModal();\r\n    //   },\r\n    // };\r\n    if (e.keyCode === 27) { \r\n      e.preventDefault();\r\n      closeModal();; \r\n    }\r\n  }\r\n\r\n  \r\n  const currentItemToView = useSelector(state => state.ingridients.currentItemToView)\r\n\r\n  const modal = (\r\n    <>\r\n      <Modal header={ \r\n          currentItemToView?.type === 'order' ? (\r\n            'Детали заказа'\r\n          ) : (\r\n            currentItemToView?.type === 'ingridient' ? (\r\n              'Детали ингридиента'\r\n            ) : (\r\n              'Заказ'\r\n            )\r\n          )\r\n        } \r\n        onClose={closeModal}> \r\n        {\r\n          !currentItemToView?.item\r\n          ?\r\n          <OrderDetails/>\r\n          :\r\n          currentItemToView?.type === 'ingridient'\r\n          ?\r\n          <IngridientDetails currentItemToView={currentItemToView}/>\r\n          :\r\n          <OrderDetailsModal/>\r\n        }\r\n      </Modal>\r\n    </>\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (localStorage.getItem('refreshToken'))\r\n      dispatch(getToken(localStorage.getItem('refreshToken')))\r\n  }, [dispatch])\r\n  React.useEffect(() => {\r\n    if (localStorage.getItem('refreshToken')) dispatch(getUser(localStorage.getItem('refreshToken')))\r\n  }, [dispatch])\r\n\r\n  const background = (history.action === \"PUSH\" ||  history.action === \"REPLACE\")  && location.state && location.state.background\r\n\r\n  return (\r\n    <>\r\n      <AppHeader/>\r\n        <Switch location={background|| location}>\r\n          <AuthProtectedRoute path=\"/login\" exact>\r\n            <LoginPage />\r\n          </AuthProtectedRoute>\r\n          <AuthProtectedRoute path=\"/register\" exact>\r\n            <RegisterPage />\r\n          </AuthProtectedRoute>\r\n          <AuthProtectedRoute path=\"/forgot-password\" exact>\r\n            <ForgotPasswordPage />\r\n          </AuthProtectedRoute>\r\n          <AuthProtectedRoute path=\"/reset-password\" exact>\r\n            <ResetPasswordPage />\r\n          </AuthProtectedRoute>\r\n          <Route path=\"/feed\" exact>\r\n            <FeedPage \r\n              modal = {{openModal}}/>\r\n          </Route>\r\n          <Route path=\"/feed/:id\" >\r\n            <FeedIdPage  />\r\n          </Route>\r\n          <ProtectedRoute path=\"/profile/orders/:id\" exact>\r\n            <FeedIdPage />\r\n          </ProtectedRoute>\r\n          <ProtectedRoute path=\"/profile\" >\r\n            <ProfilePage \r\n              modal = {{openModal}}/>\r\n          </ProtectedRoute>\r\n          <Route path=\"/ingredients/:id\" exact>\r\n            <IngridientsIdPage />\r\n          </Route>\r\n          <Route path=\"/\" exact>\r\n            <MainPage \r\n              modal = {{openModal}}/>\r\n          </Route>\r\n          <Route>\r\n            <Error404 />\r\n          </Route>\r\n        </Switch>\r\n        {background && (\r\n            <Route path={'ingridients/:id'}>\r\n              <IngridientsIdPage/>\r\n            </Route>\r\n        )}\r\n        {background && (\r\n            <Route path='feed/:id' exact>\r\n              <FeedIdPage/>\r\n            </Route>\r\n        )}\r\n        {background && (\r\n            <Route path='profile/orders/:id' exact>\r\n              <FeedIdPage/>\r\n            </Route>\r\n        )}\r\n      {visible && modal}\r\n  \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/error-404.4029d097.jpg\";","import React from 'react';\r\n\r\nimport style from './error-indicator.module.css';\r\nimport icon from '../../../images/error-404.jpg';\r\n\r\nconst ErrorIndicator = () => {\r\n  return (\r\n    <div className={style.error_indicator}>\r\n      <img src={icon} alt=\"error icon\"/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import ErrorBoundry from './error-boundry';\r\n\r\nexport default ErrorBoundry;\r\n","import React, { Component } from 'react';\r\n\r\nimport ErrorIndicator from '../error-indicator/error-indicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n\r\n  state = {\r\n    hasError: false\r\n  };\r\n\r\n  componentDidCatch() {\r\n    this.setState({\r\n      hasError: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n","import {\r\n    GET_ITEMS_FAILED,\r\n    GET_ITEMS_REQUEST,\r\n    GET_ITEMS_SUCCESS,\r\n    TAB_SWITCH,\r\n    SET_CURRENT_ITEM_TO_VIEW\r\n  } from '../actions/ingridients';\r\n  import {TIngredient, TOrder} from '../../types'\r\n  import {TIngredientActions} from '../actions/ingridients'\r\n  import {TCurrentItemToView} from '../../types'\r\n  \r\n    type TInitialState = {\r\n      items: TIngredient[],\r\n      itemsRequest: boolean,\r\n      itemsFailed: boolean,\r\n  \r\n      currentItemToView: TCurrentItemToView | null,\r\n    \r\n      currentTab: 'buns' | 'sauces' | 'mains',\r\n    }\r\n  \r\n  const initialState: TInitialState = {\r\n    items: [],\r\n    itemsRequest: false,\r\n    itemsFailed: false,\r\n\r\n    currentItemToView: null,\r\n  \r\n    currentTab: 'buns',\r\n  };\r\n  \r\n  export const ingridientsReducer = (state = initialState, action:TIngredientActions): TInitialState => {\r\n    switch (action.type) {\r\n      case GET_ITEMS_REQUEST: {\r\n        return {\r\n          ...state,\r\n          itemsRequest: true\r\n        };\r\n      }\r\n      case GET_ITEMS_SUCCESS: {\r\n        return { \r\n          ...state, \r\n          itemsFailed: false, \r\n          items: action.items, \r\n          itemsRequest: false \r\n        };\r\n      }\r\n      case GET_ITEMS_FAILED: {\r\n        return { \r\n          ...state, \r\n          itemsFailed: true, \r\n          itemsRequest: false \r\n        };\r\n      }\r\n      case TAB_SWITCH: {\r\n        return {\r\n          ...state,\r\n          currentTab: action.payload\r\n        };\r\n      }\r\n      case SET_CURRENT_ITEM_TO_VIEW: {\r\n        return { ...state, \r\n          currentItemToView: action.currentItemToView };\r\n      }\r\n      default: {\r\n        return state;\r\n      }\r\n    }\r\n  };\r\n  \r\n  // let data_buns = action.payload.filter(obj1 => obj1.type === \"bun\");\r\n  // const buns = data_buns[Math.floor(Math.random() * 2)]\r\n  // let totalPrice = buns.price * 2;\r\n  // items.map(item => (totalPrice += item.price));\r\n  ","import {\r\n    GET_ORDER_FAILED,\r\n    GET_ORDER_REQUEST,\r\n    GET_ORDER_SUCCESS,\r\n    ADD_ITEM_TO_CONSTRUCTOR,\r\n    DELETE_ITEM_FROM_CONSTRUCTOR,\r\n    CHANGE_ORDER_OF_ITEMS_IN_CONSTRUCTOR,\r\n  } from '../actions/constructor';\r\n  \r\nimport {TIngredient, TOrder, TChosenBuns, TOrderResponse} from '../../types'\r\nimport {TConstructorActions} from '../actions/constructor'\r\n\r\n  type TInitialState = {\r\n    order: TOrderResponse | null,\r\n    orderRequest: boolean,\r\n    orderFailed: boolean,\r\n  \r\n    chosenItems: TIngredient[],\r\n    chosenBuns: TIngredient | TChosenBuns,\r\n\r\n    totalPrice: number,\r\n    totalPriceBuns: number\r\n  }\r\n\r\n  const initialState: TInitialState = {\r\n\r\n    order: null,\r\n    orderRequest: false,\r\n    orderFailed: false,\r\n  \r\n    chosenItems: [],\r\n    chosenBuns: {price: 0, name:'name',image:'image', _id:'_id'},\r\n\r\n    totalPrice: 0,\r\n    totalPriceBuns: 0\r\n  };\r\n  \r\n  export const constructorReducer = (state = initialState, action: TConstructorActions):TInitialState  => {\r\n    switch (action.type) {\r\n\r\n      case GET_ORDER_REQUEST: {\r\n        return {\r\n          ...state,\r\n          orderRequest: true\r\n        };\r\n      }\r\n      case GET_ORDER_SUCCESS: {\r\n        return { \r\n          ...state, \r\n          orderFailed: false,\r\n          order: action.order, \r\n          orderRequest: false\r\n        };\r\n      }\r\n      case GET_ORDER_FAILED: {\r\n        return { \r\n          ...state, \r\n          orderFailed: true, \r\n          orderRequest: false \r\n        };\r\n      }\r\n\r\n      case ADD_ITEM_TO_CONSTRUCTOR: {\r\n        if (action.item.type === \"bun\") {\r\n          let priceItems = 0\r\n          if (state.chosenItems[0]) {\r\n            priceItems = state.chosenItems.reduce((a, b) => a + b.price, 0)\r\n          }\r\n          const totalPrice = action.item.price * 2 +priceItems\r\n          return { \r\n            ...state, \r\n            chosenBuns: action.item,\r\n            totalPrice\r\n          };\r\n        }\r\n\r\n        let priceBuns = 0\r\n        if (state.chosenBuns) {\r\n          priceBuns = state.chosenBuns.price * 2\r\n        }\r\n        const newItems = [...state.chosenItems, action.item]\r\n        const priceItems = newItems.reduce((a, b) => a + b.price, 0)\r\n        const totalPrice = priceBuns+priceItems\r\n        return { \r\n          ...state, \r\n          chosenItems: newItems,\r\n          totalPrice\r\n        }\r\n      }\r\n      case DELETE_ITEM_FROM_CONSTRUCTOR: {\r\n        var chosenItems = [...state.chosenItems]\r\n        chosenItems.splice(action.index, 1)\r\n        \r\n        const priceForNewItems = chosenItems.reduce((a, b) => a + b.price, 0)\r\n        const priceBuns =  state.chosenBuns.price * 2\r\n        let totalPrice = priceBuns+priceForNewItems\r\n\r\n        return { ...state, \r\n          chosenItems: chosenItems,\r\n          totalPrice\r\n         };\r\n      }\r\n      case CHANGE_ORDER_OF_ITEMS_IN_CONSTRUCTOR: {\r\n        const dragCard = state.chosenItems[action.dragIndex];\r\n        if (dragCard){\r\n          const newArray = [\r\n            ...state.chosenItems,\r\n          ]\r\n          newArray.splice(action.dragIndex, 1)\r\n          newArray.splice(action.hoverIndex, 0, dragCard)\r\n\r\n          return { \r\n            ...state, \r\n            chosenItems: newArray\r\n          };\r\n        } else {\r\n          return state;\r\n        }\r\n      }\r\n      default: {\r\n        return state;\r\n      }\r\n    }\r\n  };\r\n  ","import {\r\n  GET_FORGOT_PASSWORD_REQUEST,\r\n  GET_FORGOT_PASSWORD_SUCCESS,\r\n  GET_FORGOT_PASSWORD_FAILED,\r\n  GET_REGISTER_REQUEST,\r\n  GET_REGISTER_SUCCESS,\r\n  GET_REGISTER_FAILED,\r\n  GET_RESET_PASSWORD_REQUEST,\r\n  GET_RESET_PASSWORD_SUCCESS,\r\n  GET_RESET_PASSWORD_FAILED,\r\n  GET_LOGIN_REQUEST,\r\n  GET_LOGIN_SUCCESS,\r\n  GET_LOGIN_FAILED,\r\n  GET_LOGOUT_REQUEST,\r\n  GET_LOGOUT_SUCCESS,\r\n  GET_LOGOUT_FAILED,\r\n  GET_TOKEN_REQUEST,\r\n  GET_TOKEN_SUCCESS,\r\n  GET_TOKEN_FAILED,\r\n  GET_USER_REQUEST,\r\n  GET_USER_SUCCESS,\r\n  GET_USER_FAILED,\r\n  PATCH_USER_REQUEST,\r\n  PATCH_USER_SUCCESS,\r\n  PATCH_USER_FAILED,\r\n  } from '../actions/registration';\r\n  import {TRegistrationActions} from '../actions/registration'\r\n  import {TUser, TForgotPasswordData} from '../../types' \r\n  \r\n    type TInitialState = {\r\n      forgotPasswordData: TForgotPasswordData | null,\r\n      forgotPasswordRequest: boolean,\r\n      forgotPasswordFailed:  object | boolean,\r\n  \r\n      resetPasswordData: any,\r\n      resetPasswordRequest: boolean,\r\n      resetPasswordFailed:  object | boolean,\r\n  \r\n      registerData: any,\r\n      registerRequest: boolean,\r\n      registerFailed:  any,\r\n  \r\n      loginRequest: boolean,\r\n      loginFailed:  object | boolean,\r\n  \r\n      logoutRequest: boolean,\r\n      logoutFailed:  object | boolean,\r\n  \r\n      tokenRequest: boolean,\r\n      tokenFailed:  object | boolean,\r\n  \r\n      userRequest: boolean,\r\n      userFailed: object | boolean,\r\n      user: TUser | null, \r\n    }\r\n  \r\n  const initialState: TInitialState = {\r\n    forgotPasswordData: null,\r\n    forgotPasswordRequest: false,\r\n    forgotPasswordFailed: false,\r\n\r\n    resetPasswordData: null,\r\n    resetPasswordRequest: false,\r\n    resetPasswordFailed: false,\r\n\r\n    registerData: null,\r\n    registerRequest: false,\r\n    registerFailed: false,\r\n\r\n    loginRequest: false,\r\n    loginFailed: false,\r\n\r\n    logoutRequest: false,\r\n    logoutFailed: false,\r\n\r\n    tokenRequest: false,\r\n    tokenFailed: false,\r\n\r\n    userRequest: false,\r\n    userFailed: false,\r\n    user: null, \r\n\r\n  };\r\n  \r\n  export const registrationReducer = (state = initialState, action: TRegistrationActions): TInitialState => {\r\n    switch (action.type) {\r\n      case GET_USER_REQUEST: {\r\n        return {\r\n          ...state,\r\n          userRequest: true\r\n        };\r\n      }\r\n      case GET_USER_SUCCESS: {\r\n        return { \r\n          ...state, \r\n          userFailed: false, \r\n          user: action.payload.user, \r\n          userRequest: false \r\n        };\r\n      }\r\n      case GET_USER_FAILED: {\r\n        return { \r\n          ...state, \r\n          userFailed: action, \r\n          userRequest: false,\r\n          user: null,\r\n        };\r\n      }\r\n      case PATCH_USER_REQUEST: {\r\n        return {\r\n          ...state,\r\n          userRequest: true\r\n        };\r\n      }\r\n      case PATCH_USER_SUCCESS: {\r\n        return { \r\n          ...state, \r\n          userFailed: false, \r\n          user: action.payload.user, \r\n          userRequest: false \r\n        };\r\n      }\r\n      case PATCH_USER_FAILED: {\r\n        return { \r\n          ...state, \r\n          userFailed: action, \r\n          userRequest: false,\r\n          user: null, \r\n        };\r\n      }\r\n      case GET_REGISTER_REQUEST: {\r\n        return {\r\n          ...state,\r\n          registerRequest: true\r\n        };\r\n      }\r\n      case GET_REGISTER_SUCCESS: {\r\n        localStorage.setItem('refreshToken', action.payload.refreshToken)\r\n        return { \r\n          ...state, \r\n          registerFailed: false, \r\n          user: action.payload.user, \r\n          registerRequest: false \r\n        };\r\n      }\r\n      case GET_REGISTER_FAILED: {\r\n        return { \r\n          ...state, \r\n          registerFailed: action, \r\n          registerRequest: false,\r\n          user: null,\r\n        };\r\n      }\r\n      case GET_LOGIN_REQUEST: {\r\n        return {\r\n          ...state,\r\n          loginRequest: true\r\n        };\r\n      }\r\n      case GET_LOGIN_SUCCESS: {\r\n        localStorage.setItem('refreshToken', action.payload.refreshToken)\r\n        return { \r\n          ...state, \r\n          loginFailed: false, \r\n          user: action.payload.user, \r\n          loginRequest: false \r\n        };\r\n      }\r\n      case GET_LOGIN_FAILED: {\r\n        return { \r\n          ...state, \r\n          loginFailed: action, \r\n          loginRequest: false , \r\n          user: null,\r\n        };\r\n      }\r\n      case GET_LOGOUT_REQUEST: {\r\n        return {\r\n          ...state,\r\n          logoutRequest: true\r\n        };\r\n      }\r\n      case GET_LOGOUT_SUCCESS: {\r\n        localStorage.removeItem('refreshToken')\r\n        return { \r\n          ...state, \r\n          logoutFailed: false, \r\n          user: null,\r\n          logoutRequest: false \r\n        };\r\n      }\r\n      case GET_LOGOUT_FAILED: {\r\n        return { \r\n          ...state, \r\n          logoutFailed: action, \r\n          logoutRequest: false , \r\n        };\r\n      }\r\n      case GET_TOKEN_REQUEST: {\r\n        return {\r\n          ...state,\r\n          tokenRequest: true\r\n        };\r\n      }\r\n      case GET_TOKEN_SUCCESS: {\r\n        return { \r\n          ...state, \r\n          tokenFailed: false, \r\n          tokenRequest: false \r\n        };\r\n      }\r\n      case GET_TOKEN_FAILED: {\r\n        return { \r\n          ...state, \r\n          tokenFailed: action, \r\n          tokenRequest: false , \r\n        };\r\n      }\r\n      case GET_FORGOT_PASSWORD_REQUEST: {\r\n        return {\r\n          ...state,\r\n          forgotPasswordRequest: true\r\n        };\r\n      }\r\n      case GET_FORGOT_PASSWORD_SUCCESS: {\r\n        return { \r\n          ...state, \r\n          forgotPasswordFailed: false, \r\n          forgotPasswordData: action.payload, \r\n          forgotPasswordRequest: false \r\n        };\r\n      }\r\n      case GET_FORGOT_PASSWORD_FAILED: {\r\n        return { \r\n          ...state, \r\n          forgotPasswordFailed: true, \r\n          forgotPasswordRequest: false \r\n        };\r\n      }\r\n      case GET_RESET_PASSWORD_REQUEST: {\r\n        return {\r\n          ...state,\r\n          resetPasswordRequest: true\r\n        };\r\n      }\r\n      case GET_RESET_PASSWORD_SUCCESS: {\r\n        localStorage.removeItem('isForgotEmail')\r\n        return { \r\n          ...state, \r\n          resetPasswordFailed: false, \r\n          resetPasswordData: action.payload, \r\n          resetPasswordRequest: false \r\n        };\r\n      }\r\n      case GET_RESET_PASSWORD_FAILED: {\r\n        return { \r\n          ...state, \r\n          resetPasswordFailed: true, \r\n          resetPasswordRequest: false \r\n        };\r\n      }\r\n      default: {\r\n        return state;\r\n      }\r\n    }\r\n  };\r\n  \r\n  // let data_buns = action.payload.filter(obj1 => obj1.type === \"bun\");\r\n  // const buns = data_buns[Math.floor(Math.random() * 2)]\r\n  // let totalPrice = buns.price * 2;\r\n  // items.map(item => (totalPrice += item.price));\r\n  ","import {\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_GET_MESSAGE,\r\n  WS_CONNECTION_AUTH_SUCCESS,\r\n  WS_CONNECTION_AUTH_ERROR,\r\n  WS_CONNECTION_AUTH_CLOSED,\r\n  WS_GET_MESSAGE_AUTH,\r\n  ORDER_ID_FAILED,\r\n  ORDER_ID_REQUEST,\r\n  ORDER_ID_SUCCESS\r\n} from '../actions/feed';\r\nimport {TOrder} from '../../types'\r\nimport {TFeedActions} from '../actions/feed'\r\n\r\n  type TInitialState = {\r\n    wsConnected: boolean,\r\n    wsError: {isTrusted:boolean} | null,\r\n    wsFeedData: {orders: TOrder[], total: number, totalToday: number},\r\n\r\n    wsAuthConnected: boolean,\r\n    wsAuthError: {isTrusted:boolean} | null,\r\n    wsFeedDataAuth: {orders: TOrder[]},\r\n\r\n    orderIdRequest: boolean,\r\n    orderIdFailed: boolean,\r\n    orderId: TOrder | null,\r\n  }\r\n\r\n  const initialState:TInitialState = {\r\n\r\n    wsConnected: false,\r\n    wsError: null,\r\n    wsFeedData: {orders: [], total: 0, totalToday: 0},\r\n\r\n    wsAuthConnected: false,\r\n    wsAuthError: null,\r\n    wsFeedDataAuth: {orders: []},\r\n\r\n    orderIdRequest: false,\r\n    orderIdFailed: false,\r\n    orderId: null\r\n  };\r\n  \r\n  export const feedReducer = (state = initialState, action:TFeedActions):TInitialState => {\r\n    switch (action.type) {\r\n      case WS_CONNECTION_SUCCESS: {\r\n        return {\r\n          ...state,\r\n          wsError: null,\r\n          wsConnected: true\r\n        };\r\n      }\r\n      case WS_CONNECTION_ERROR: {\r\n        return {\r\n          ...state,\r\n          wsError: action.payload,\r\n          wsConnected: false\r\n        };\r\n      }\r\n      case WS_CONNECTION_CLOSED: {\r\n        return {\r\n          ...state,\r\n          wsError: null,\r\n          wsConnected: false\r\n        };\r\n      }\r\n      case WS_GET_MESSAGE: {\r\n        return {\r\n          ...state,\r\n          wsError: null,\r\n          wsFeedData: action.payload\r\n        };\r\n      }\r\n      case WS_CONNECTION_AUTH_SUCCESS: {\r\n        return {\r\n          ...state,\r\n          wsAuthError: null,\r\n          wsAuthConnected: true\r\n        };\r\n      }\r\n      case WS_CONNECTION_AUTH_ERROR: {\r\n        return {\r\n          ...state,\r\n          wsAuthError: action.payload,\r\n          wsAuthConnected: false\r\n        };\r\n      }\r\n      case WS_CONNECTION_AUTH_CLOSED: {\r\n        return {\r\n          ...state,\r\n          wsAuthError: null,\r\n          wsAuthConnected: false\r\n        };\r\n      }\r\n      case WS_GET_MESSAGE_AUTH: {\r\n        return {\r\n          ...state,\r\n          wsAuthError: null,\r\n          wsFeedDataAuth: action.payload\r\n        };\r\n      }\r\n      case ORDER_ID_REQUEST: {\r\n        return {\r\n          ...state,\r\n          orderIdRequest: true\r\n        };\r\n      }\r\n      case ORDER_ID_SUCCESS: {\r\n        return { \r\n          ...state, \r\n          orderIdFailed: false,\r\n          orderId: action.payload.orders[0], \r\n          orderIdRequest: false\r\n        };\r\n      }\r\n      case ORDER_ID_FAILED: {\r\n        return { \r\n          ...state, \r\n          orderIdFailed: true, \r\n          orderIdRequest: false \r\n        };\r\n      }\r\n      default: {\r\n        return state;\r\n      }\r\n    }\r\n  };\r\n  ","import { combineReducers } from 'redux';\r\nimport { ingridientsReducer } from './ingridients';\r\nimport {constructorReducer} from './constructor';\r\nimport {registrationReducer} from './registration';\r\nimport {feedReducer} from './feed';\r\n\r\nexport const rootReducer = combineReducers({\r\n  burgerConstructor: constructorReducer,\r\n  ingridients: ingridientsReducer,\r\n  registration: registrationReducer,\r\n  feed: feedReducer\r\n});\r\n","import { compose, createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './services/reducers';\r\nimport { socketMiddleware } from './services/socket-midleware' \r\nimport { socketMiddlewareAuth } from './services/socket-midleware-auth';\r\n\r\ndeclare global {\r\n  interface Window { __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: any; }\r\n}\r\nconst composeEnhancers =\r\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose; \r\n    \r\nconst enhancer = composeEnhancers(applyMiddleware(socketMiddleware(), socketMiddlewareAuth(), thunk));\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport const store = createStore(rootReducer, enhancer);","import { \r\n    WS_CONNECTION_START,\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_CLOSED,\r\n    WS_SEND_MESSAGE,\r\n    wsGetMessageAction\r\n} from \"./actions/feed\"\r\n\r\nexport const socketMiddleware = () => {\r\n    return store => {\r\n        let socket = null;\r\n\r\n        return next => action => {\r\n            const { dispatch } = store;\r\n            const { type, payload } = action;\r\n            if (type === WS_CONNECTION_START) {\r\n                const wsUrl =  'wss://norma.nomoreparties.space/orders/all'\r\n                socket = new WebSocket(wsUrl);\r\n            }\r\n            if (socket) {\r\n                socket.onopen = event => {\r\n                dispatch({ type: WS_CONNECTION_SUCCESS, payload: event });\r\n            };\r\n\r\n            socket.onerror = event => {\r\n                dispatch({ type: WS_CONNECTION_ERROR, payload: event });\r\n            };\r\n\r\n            socket.onmessage = event => {\r\n                const { data } = event;\r\n                const parsedData = JSON.parse(data);\r\n                const { success, ...restParsedData } = parsedData;\r\n\r\n                dispatch(wsGetMessageAction(restParsedData));\r\n            };\r\n\r\n            socket.onclose = event => {\r\n                dispatch({ type: WS_CONNECTION_CLOSED, payload: event });\r\n            };\r\n\r\n            if (type === WS_SEND_MESSAGE) {\r\n                const message = { ...payload };\r\n                socket.send(JSON.stringify(message));\r\n            }\r\n            }\r\n\r\n            next(action);\r\n        };\r\n    };\r\n};\r\n","import { \r\n    WS_CONNECTION_AUTH_START,\r\n    WS_CONNECTION_AUTH_SUCCESS,\r\n    WS_CONNECTION_AUTH_ERROR,\r\n    WS_CONNECTION_AUTH_CLOSED,\r\n    WS_GET_MESSAGE_AUTH,\r\n    WS_SEND_MESSAGE_AUTH,\r\n} from \"./actions/feed\"\r\nimport { getCookie } from \"./utils\";\r\n\r\nexport const socketMiddlewareAuth = () => {\r\n    return store => {\r\n        let socket = null;\r\n\r\n        return next => action => {\r\n            const { dispatch } = store;\r\n            const { type, payload } = action;\r\n            const token = getCookie('accessToken');\r\n            if (type === WS_CONNECTION_AUTH_START) {\r\n                const wsUrl =  'wss://norma.nomoreparties.space/orders'\r\n                socket = new WebSocket(`${wsUrl}?token=${token}`);\r\n            }\r\n            if (socket) {\r\n                socket.onopen = event => {\r\n                dispatch({ type: WS_CONNECTION_AUTH_SUCCESS, payload: event });\r\n            };\r\n\r\n            socket.onerror = event => {\r\n                dispatch({ type: WS_CONNECTION_AUTH_ERROR, payload: event });\r\n            };\r\n\r\n            socket.onmessage = event => {\r\n                const { data } = event;\r\n                const parsedData = JSON.parse(data);\r\n                const { success, ...restParsedData } = parsedData;\r\n\r\n                dispatch({ type: WS_GET_MESSAGE_AUTH, payload: restParsedData });\r\n            };\r\n\r\n            socket.onclose = event => {\r\n                dispatch({ type: WS_CONNECTION_AUTH_CLOSED, payload: event });\r\n            };\r\n\r\n            if (type === WS_SEND_MESSAGE_AUTH) {\r\n                const message = { ...payload };\r\n                socket.send(JSON.stringify(message));\r\n            }\r\n            }\r\n\r\n            next(action);\r\n        };\r\n    };\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.module.css';\r\nimport App from './components/app/app';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport ErrorBoundry from './components/utils/error-boundry';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\n import { store } from './store';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ErrorBoundry>\r\n        <Provider store={store}>\r\n          <Router>\r\n            <App />\r\n          </Router>\r\n        </Provider>\r\n    </ErrorBoundry>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__inner\":\"app-header_header__inner__2etQR\",\"header\":\"app-header_header__sJ2h6\",\"header__logo\":\"app-header_header__logo__7MID5\",\"nav\":\"app-header_nav__1zBpP\",\"nav__link\":\"app-header_nav__link__2pTRa\",\"active\":\"app-header_active__3EYN4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"order-details-modal_grid__2P7Ik\",\"image\":\"order-details-modal_image__4jI3Z\",\"name\":\"order-details-modal_name__mNK1O\",\"modal\":\"order-details-modal_modal__1aW6d\",\"flex_row\":\"order-details-modal_flex_row__17gVl\",\"img\":\"order-details-modal_img__3f20b\",\"container\":\"order-details-modal_container__14V-e\",\"flex_column\":\"order-details-modal_flex_column__Ccl7Q\",\"done_clr\":\"order-details-modal_done_clr__1Hzqi\",\"center\":\"order-details-modal_center__2CsYD\",\"flex_center\":\"order-details-modal_flex_center__3bWsz\",\"link\":\"order-details-modal_link__22pez\",\"sidebar__link\":\"order-details-modal_sidebar__link__Qrh4i\",\"active\":\"order-details-modal_active__11KYS\",\"text_color_error\":\"order-details-modal_text_color_error__g-Cbr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"pages_container__2r5A2\",\"registration\":\"pages_registration__1EdNI\",\"row\":\"pages_row__2hmcd\",\"column\":\"pages_column__2b6Tx\",\"left\":\"pages_left__2VFqp\",\"right\":\"pages_right__2sbrV\",\"flex_row\":\"pages_flex_row__1uo7A\",\"img\":\"pages_img__2TEty\",\"flex_column\":\"pages_flex_column__o5lfo\",\"done_clr\":\"pages_done_clr__2gv9-\",\"center\":\"pages_center__2nmoi\",\"flex_center\":\"pages_flex_center__3ik1Y\",\"link\":\"pages_link__QBhsC\",\"sidebar__link\":\"pages_sidebar__link__3w-Ed\",\"active\":\"pages_active__12vUm\",\"text_color_error\":\"pages_text_color_error__2ZMum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"ingridient-details_grid__el1wA\",\"image\":\"ingridient-details_image__5ob4P\",\"name\":\"ingridient-details_name__2l_w9\",\"modal\":\"ingridient-details_modal__2NXjQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overflow\":\"burger-ingridients_overflow__2MJtm\",\"headers\":\"burger-ingridients_headers__14F_S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"list-by-type_card__LqPBo\",\"list_by_type\":\"list-by-type_list_by_type__l6Ptu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"order-details_main__iCVMf\",\"image\":\"order-details_image__1j9V4\",\"wrapped\":\"order-details_wrapped__5KAwU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__3KKK_\",\"header\":\"modal_header__1th1X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ingridient-card_card__1dCti\",\"img\":\"ingridient-card_img__1rkya\",\"total\":\"ingridient-card_total__3pB0o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal_overlay\":\"modal-overlay_modal_overlay__3uA9n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_indicator\":\"error-indicator_error_indicator__3b40O\",\"error-indicator\":\"error-indicator_error-indicator__13emW\",\"boom\":\"error-indicator_boom__2LT6V\"};"],"sourceRoot":""}